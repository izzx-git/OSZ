# file opened: cmd.asm
  1   0000              ;cmd - приложение для OS
  2   0000                 device ZXSPECTRUM128
  3   0000              	include "os_defs.asm"
# file opened: os_defs.asm
  1+  0000              ;Список всех вызовов (функций) ОС GMX
  2+  0000
  3+  0000              ;Включить в свой код (в начале файла):
  4+  0000              	; include os_defs.asm
  5+  0000
  6+  0000              ;Использовать только имена функций, коды могут поменяться
  7+  0000
  8+  0000              ;например:
  9+  0000              	; org PROGSTART
 10+  0000              	; ../include os_defs.asm
 11+  0000              	; ld hl,text
 12+  0000              	; OS_PRINTZ ;печать	до кода 0
 13+  0000
 14+  0000              ;сохранность регистров не гарантируется
 15+  0000              ;на выходе обычно (но не всегда) CY=1 = ошибка
 16+  0000
 17+  0000              PROGSTART equ #8000 ;адрес старта приложений
 18+  0000
 19+  0000
 20+  0000              ;вывод в консоль --------------------
 21+  0000
 22+  0000              ;печать символа в консоль (ускоренная)
 23+  0000              	MACRO OS_PRCHARF ;a=char
 24+  0000 ~            	rst #10
 25+  0000              	ENDM
 26+  0000
 27+  0000              ;очистить консоль
 28+  0000              	macro OS_CLS ;clear visible area of terminal
 29+  0000 ~                ld c,#00
 30+  0000 ~                rst #20
 31+  0000                  endm
 32+  0000
 33+  0000              ;установить позицию курсора в консоли
 34+  0000                  macro OS_SETXY ;de=yx ;SET CURSOR POSITION
 35+  0000 ~                ld c,#01
 36+  0000 ~                rst #20
 37+  0000                  endm
 38+  0000
 39+  0000              ;печать символа в консоль
 40+  0000                  macro OS_PRCHAR ;a=char
 41+  0000 ~                ld c,#02
 42+  0000 ~                rst #20
 43+  0000                  endm
 44+  0000
 45+  0000              ;заполнение строки одним символом
 46+  0000                  macro OS_FLINE ;; H - line ; A - char
 47+  0000 ~                ld c,#03
 48+  0000 ~                rst #20
 49+  0000                  endm
 50+  0000
 51+  0000              ;покрасить строку цветом
 52+  0000                  macro OS_PLINE ;a - line, b - color
 53+  0000 ~                ld c,#04
 54+  0000 ~                rst #20
 55+  0000                  endm
 56+  0000
 57+  0000
 58+  0000                  ; macro OS_ ;
 59+  0000                  ; ld c,#05
 60+  0000                  ; rst #20
 61+  0000                  ; endm
 62+  0000
 63+  0000              ;установить цвет текста в консоли;
 64+  0000                  macro OS_SET_COLOR ;a = color, b = color 2 (highlight)
 65+  0000 ~                ld c,#06
 66+  0000 ~                rst #20
 67+  0000                  endm
 68+  0000
 69+  0000                  ; macro OS_ ;
 70+  0000                  ; ld c,#07
 71+  0000                  ; rst #20
 72+  0000                  ; endm
 73+  0000
 74+  0000                  ; macro OS_ ;
 75+  0000                  ; ld c,#08
 76+  0000                  ; rst #20
 77+  0000                  ; endm
 78+  0000
 79+  0000
 80+  0000
 81+  0000              ;печать в консоль до кода 0
 82+  0000                  macro OS_PRINTZ ;hl=text ;PRINT to 0
 83+  0000 ~                ld c,#09
 84+  0000 ~                rst #20
 85+  0000                  endm
 86+  0000
 87+  0000              ;прочитать байт из uart порта;
 88+  0000                  macro OS_UART_READ ; A - byte (Out: CY=1 Not Readed)
 89+  0000 ~                ld c,#0a
 90+  0000 ~                rst #20
 91+  0000                  endm
 92+  0000
 93+  0000              ;записать байт в uart порт;
 94+  0000                  macro OS_UART_WRITE ; A - byte (Out: CY=1 Not Writed)
 95+  0000 ~                ld c,#0b
 96+  0000 ~                rst #20
 97+  0000                  endm
 98+  0000
 99+  0000                  ; macro OS_ ;
100+  0000                  ; ld c,#0c
101+  0000                  ; rst #20
102+  0000                  ; endm
103+  0000
104+  0000                  ; macro OS_ ;
105+  0000                  ; ld c,#0d
106+  0000                  ; rst #20
107+  0000                  ; endm
108+  0000
109+  0000                  ; macro OS_ ;
110+  0000                  ; ld c,#0e
111+  0000                  ; rst #20
112+  0000                  ; endm
113+  0000
114+  0000                  ; macro OS_ ;
115+  0000                  ; ld c,#0f
116+  0000                  ; rst #20
117+  0000                  ; endm
118+  0000
119+  0000              ;ввод с консоли ----------------------
120+  0000
121+  0000              ;получить код нажатой клавиши
122+  0000                  macro OS_GETCHAR ;read char from stdin (out: A=char, 255-no char)
123+  0000 ~                ld c,#10
124+  0000 ~                rst #20
125+  0000                  endm
126+  0000
127+  0000
128+  0000                  ; macro OS_ ;
129+  0000                  ; ld c,#11
130+  0000                  ; rst #20
131+  0000                  ; endm
132+  0000
133+  0000                  ; macro OS_ ;
134+  0000                  ; ld c,#12
135+  0000                  ; rst #20
136+  0000                  ; endm
137+  0000
138+  0000                  ; macro OS_ ;
139+  0000                  ; ld c,#13
140+  0000                  ; rst #20
141+  0000                  ; endm
142+  0000
143+  0000
144+  0000              ;прерывания --------------------------
145+  0000
146+  0000              ;установка адреса обработчика прерываний процесса;
147+  0000                  ; macro OS_SET_INTER ;(HL - address, A = 1 - On, A = 0 - Off)
148+  0000                  ; ld c,#14
149+  0000                  ; rst #20
150+  0000                  ; endm
151+  0000
152+  0000
153+  0000              ;плеер AY ----------------------------
154+  0000
155+  0000              ;инициализация плеера AY;
156+  0000                  macro OS_VTPL_INIT ;(HL - address music)
157+  0000 ~                ld c,#15
158+  0000 ~                rst #20
159+  0000                  endm
160+  0000
161+  0000              ;запустить плеер AY (система будет сама вызывать его каждое прерывание);
162+  0000                  macro OS_VTPL_PLAY ;()
163+  0000 ~                ld c,#16
164+  0000 ~                rst #20
165+  0000                  endm
166+  0000
167+  0000              ;заглушить плеер AY;
168+  0000                  macro OS_VTPL_MUTE ;()
169+  0000 ~                ld c,#17
170+  0000 ~                rst #20
171+  0000                  endm
172+  0000
173+  0000              ;получить значение переменной плеера;
174+  0000                  macro OS_GET_VTPL_SETUP ;(out: HL - setup address)
175+  0000 ~                ld c,#18
176+  0000 ~                rst #20
177+  0000                  endm
178+  0000
179+  0000
180+  0000              ;прочие ------------------------------
181+  0000
182+  0000
183+  0000              ;скопировать страницу в страницу
184+  0000                  macro OS_PAGE_COPY ;(A- page from, B - page to)
185+  0000 ~                ld c,#19
186+  0000 ~                rst #20
187+  0000                  endm
188+  0000
189+  0000              ;получить дополнительную страницу памяти;
190+  0000                  macro OS_GET_PAGE ;(out A - number page)
191+  0000 ~                ld c,#1a
192+  0000 ~                rst #20
193+  0000                  endm
194+  0000
195+  0000              ;включить страницу в слот 2 (#8000); предварительно зарезервировать страницу OS_GET_PAGE
196+  0000                  macro OS_SET_PAGE_SLOT2 ;(A - page number)
197+  0000 ~                ld c,#1b
198+  0000 ~                rst #20
199+  0000                  endm
200+  0000
201+  0000              ;включить страницу в слот 3 (#C000); предварительно зарезервировать страницу OS_GET_PAGE
202+  0000                  macro OS_SET_PAGE_SLOT3 ;(A - page number)
203+  0000 ~                ld c,#1c
204+  0000 ~                rst #20
205+  0000                  endm
206+  0000
207+  0000              ;включить экран N;
208+  0000                  macro OS_SET_SCR ;(A - number screen 5, 7, 39, 3a)
209+  0000 ~                ld c,#1d
210+  0000 ~                rst #20
211+  0000                  endm
212+  0000
213+  0000
214+  0000              ;получить номера страниц процесса;
215+  0000                  macro OS_GET_MAIN_PAGES ;(b, c - pages in slot2, 3)
216+  0000 ~                ld c,#1e
217+  0000 ~                rst #20
218+  0000                  endm
219+  0000
220+  0000              ;получить значение системного таймера
221+  0000                  macro OS_GET_TIMER ;(out: HL, DE - timer)
222+  0000 ~                ld c,#1F
223+  0000 ~                rst #20
224+  0000                  endm
225+  0000
226+  0000
227+  0000
228+  0000                  ; macro OS_ ;
229+  0000                  ; ld c,#20
230+  0000                  ; rst #20
231+  0000                  ; endm
232+  0000
233+  0000
234+  0000              ;дисковые операции -------------------
235+  0000
236+  0000              ;открыть файл для чтения или записи
237+  0000                  macro OS_FOPENRW ;HL - File name (out: A - id file, bc, de - size)
238+  0000 ~                ld c,#21
239+  0000 ~                rst #20
240+  0000                  endm
241+  0000
242+  0000              ;создать файл
243+  0000                  macro OS_FOPENC ;HL - File name  (out: A - id file)
244+  0000 ~                ld c,#22
245+  0000 ~                rst #20
246+  0000                  endm
247+  0000
248+  0000              ;прочитать из файла
249+  0000                  macro OS_FREAD ;HL - address, A - id file, DE - length (out: bc - size readed)
250+  0000 ~                ld c,#23
251+  0000 ~                rst #20
252+  0000                  endm
253+  0000
254+  0000              ;записать в файл
255+  0000                  macro OS_FWRITE ;HL - address, A - id file, DE - length (out: bc - size writed)
256+  0000 ~                ld c,#24
257+  0000 ~                rst #20
258+  0000                  endm
259+  0000
260+  0000              ;закрыть файл
261+  0000                  macro OS_FCLOSE ;A - id file
262+  0000 ~                ld c,#25
263+  0000 ~                rst #20
264+  0000                  endm
265+  0000
266+  0000                  ; macro OS_ ;
267+  0000                  ; ld c,#26
268+  0000                  ; rst #20
269+  0000                  ; endm
270+  0000
271+  0000                  ; macro OS_ ;
272+  0000                  ; ld c,#27
273+  0000                  ; rst #20
274+  0000                  ; endm
275+  0000
276+  0000                  ; macro OS_ ;
277+  0000                  ; ld c,#28
278+  0000                  ; rst #20
279+  0000                  ; endm
280+  0000
281+  0000                  ; macro OS_ ;
282+  0000                  ; ld c,#29
283+  0000                  ; rst #20
284+  0000                  ; endm
285+  0000
286+  0000
# file closed: os_defs.asm
  4   0000              	org PROGSTART
  5   8000              start_cmd
  6   8000
  7   8000 21 29 80     	ld hl,msg_title_cmd
  8   8003              	OS_PRINTZ
  8   8003 0E 09       >    ld c,#09
  8   8005 E7          >    rst #20
  9   8006
 10   8006 3E 05        	ld a,5
 11   8008 06 0C        	ld b,#c
 12   800A              	OS_SET_COLOR
 12   800A 0E 06       >    ld c,#06
 12   800C E7          >    rst #20
 13   800D
 14   800D 21 29 80     	ld hl,msg_title_cmd
 15   8010              	OS_PRINTZ
 15   8010 0E 09       >    ld c,#09
 15   8012 E7          >    rst #20
 16   8013
 17   8013 3E 3E        	ld a,">" ;приглашение
 18   8015              	OS_PRCHARF
 18   8015 D7          >	rst #10
 19   8016
 20   8016
 21   8016              cmd_loop
 22   8016 76           	halt
 23   8017              	OS_GETCHAR ;получить нажатую клавишу
 23   8017 0E 10       >    ld c,#10
 23   8019 E7          >    rst #20
 24   801A FE FF        	cp 255
 25   801C 28 F8        	jr z,cmd_loop
 26   801E FE 0D        	cp 13
 27   8020 28 04        	jr z,cmd_loop_print
 28   8022 FE 20        	cp " "
 29   8024 38 F0        	jr c,cmd_loop ;символы до пробела не печатаем
 30   8026              cmd_loop_print
 31   8026              	OS_PRCHARF ;печать символа
 31   8026 D7          >	rst #10
 32   8027 18 ED        	jr cmd_loop
 33   8029
 34   8029
 35   8029              msg_title_cmd
 36   8029 63 6D 64 20  	db "cmd ver 2024 10 17",13,10,0
 36   802D 76 65 72 20
 36   8031 32 30 32 34
 36   8035 20 31 30 20
 36   8039 31 37 0D 0A
 36   803D 00
 37   803E
 38   803E              end_cmd
 39   803E              	;SAVETRD "OS.TRD",|"cmd.C",start_cmd,$-start_cmd
 40   803E              	savebin "cmd.com",start_cmd,$-start_cmd
# file closed: cmd.asm
