# file opened: cmd.asm
  1   0000              ;cmd - приложение для OS
  2   0000                 device ZXSPECTRUM128
  3   0000              	include "os_defs.asm"
# file opened: os_defs.asm
  1+  0000              ;Список всех вызовов (функций) ОС GMX
  2+  0000
  3+  0000              ;Включить в свой код (в начале файла):
  4+  0000              	; include os_defs.asm
  5+  0000
  6+  0000              ;Использовать только имена функций, коды могут поменяться
  7+  0000
  8+  0000              ;например:
  9+  0000              	; org PROGSTART
 10+  0000              	; ../include os_defs.asm
 11+  0000              	; ld hl,text
 12+  0000              	; OS_PRINTZ ;печать	до кода 0
 13+  0000
 14+  0000              ;сохранность регистров не гарантируется
 15+  0000              ;на выходе обычно (но не всегда) CY=1 = ошибка
 16+  0000
 17+  0000              PROGSTART equ #8000 ;адрес старта приложений
 18+  0000
 19+  0000
 20+  0000              ;короткие вызовы (именные RST) -------------------------
 21+  0000
 22+  0000              ;печать символа в консоль (ускоренная)
 23+  0000              	MACRO OS_PRINT_CHARF ;a=char
 24+  0000 ~            	rst #10
 25+  0000              	ENDM
 26+  0000
 27+  0000
 28+  0000              ;передача управления ОС до следующего прерывания (когда придёт очередь процесса в следующий раз);
 29+  0000              ;все регистры сохраняются
 30+  0000              ;рекомендуется использовать вместо обычного halt
 31+  0000              	MACRO OS_WAIT
 32+  0000 ~            	rst #18
 33+  0000              	ENDM
 34+  0000
 35+  0000              	; MACRO OS_
 36+  0000              	; rst #28
 37+  0000              	; ENDM
 38+  0000
 39+  0000              	; MACRO OS_
 40+  0000              	; rst #30
 41+  0000              	; ENDM
 42+  0000
 43+  0000
 44+  0000
 45+  0000              ;вызовы через единую точку входа RST #20 ----------------
 46+  0000
 47+  0000              ;вывод в консоль --------------------
 48+  0000
 49+  0000              ;очистить консоль
 50+  0000              	macro OS_CLS ;clear visible area of terminal
 51+  0000 ~                ld c,#00
 52+  0000 ~                rst #20
 53+  0000                  endm
 54+  0000
 55+  0000              ;установить позицию курсора в консоли
 56+  0000                  macro OS_SET_XY ;de=yx ;SET CURSOR POSITION
 57+  0000 ~                ld c,#01
 58+  0000 ~                rst #20
 59+  0000                  endm
 60+  0000
 61+  0000              ;печать символа в консоль
 62+  0000                  macro OS_PRINT_CHAR ;a=char
 63+  0000 ~                ld c,#02
 64+  0000 ~                rst #20
 65+  0000                  endm
 66+  0000
 67+  0000              ;заполнение строки одним символом
 68+  0000                  macro OS_FILL_LINE ;; H - line ; A - char
 69+  0000 ~                ld c,#03
 70+  0000 ~                rst #20
 71+  0000                  endm
 72+  0000
 73+  0000              ;покрасить строку цветом
 74+  0000                  macro OS_PAINT_LINE ;a - line, b - color
 75+  0000 ~                ld c,#04
 76+  0000 ~                rst #20
 77+  0000                  endm
 78+  0000
 79+  0000
 80+  0000                  ; macro OS_ ;
 81+  0000                  ; ld c,#05
 82+  0000                  ; rst #20
 83+  0000                  ; endm
 84+  0000
 85+  0000              ;установить цвет текста в консоли;
 86+  0000                  macro OS_SET_COLOR ;a = color, b = color 2 (highlight)
 87+  0000 ~                ld c,#06
 88+  0000 ~                rst #20
 89+  0000                  endm
 90+  0000
 91+  0000                  ; macro OS_ ;
 92+  0000                  ; ld c,#07
 93+  0000                  ; rst #20
 94+  0000                  ; endm
 95+  0000
 96+  0000                  ; macro OS_ ;
 97+  0000                  ; ld c,#08
 98+  0000                  ; rst #20
 99+  0000                  ; endm
100+  0000
101+  0000
102+  0000
103+  0000              ;печать в консоль до кода 0
104+  0000                  macro OS_PRINTZ ;hl=text ;PRINT to 0
105+  0000 ~                ld c,#09
106+  0000 ~                rst #20
107+  0000                  endm
108+  0000
109+  0000
110+  0000                  ; macro OS_
111+  0000                  ; ld c,#0a
112+  0000                  ; rst #20
113+  0000                  ; endm
114+  0000
115+  0000                  ; macro OS_
116+  0000                  ; ld c,#0b
117+  0000                  ; rst #20
118+  0000                  ; endm
119+  0000
120+  0000              ;закрыть соединение ESP
121+  0000              ;вх:
122+  0000              ;вых: CY=0 - OK; CY=1 - занято другим процессом или нет uart
123+  0000                  macro OS_ESP_CLOSE
124+  0000 ~                ld c,#0c
125+  0000 ~                rst #20
126+  0000                  endm
127+  0000
128+  0000              ;установить соединение ESP (CIPSTART);
129+  0000              ;вх: a - тип соединения 0-tcp, 1-udp, 2-ssl; hl - строка адрес, de - строка порт
130+  0000              ;вых: CY=0 - OK; CY=1 - занято другим процессом или нет uart
131+  0000              ;вых: ix - адрес в таблице соединений (ix+2 - флаг открытия =1 - открыто, 255 - ошибка);
132+  0000                  macro OS_ESP_OPEN
133+  0000 ~                ld c,#0d
134+  0000 ~                rst #20
135+  0000                  endm
136+  0000
137+  0000              ;послать запрос ESP (CIPSEND);
138+  0000              ;вх: hl - адрес данных, de - длина данных
139+  0000              ;вых: CY=0 - OK; CY=1 - занято другим процессом или нет uart
140+  0000              ;вых: ix - адрес в таблице соединений (ix+4 - флаг =1 - отправлено, 255 - ошибка)
141+  0000                  macro OS_ESP_SEND
142+  0000 ~                ld c,#0e
143+  0000 ~                rst #20
144+  0000                  endm
145+  0000
146+  0000              ;получить пакет ESP (+IPD);
147+  0000              ;вх: hl - адрес для данных
148+  0000              ;вых: CY=0 - OK; CY=1 - занято другим процессом или нет uart
149+  0000              ;вых: ix - адрес в таблице соединений (ix+6 - флаг =1 - принято, 255 - ошибка)
150+  0000                  macro OS_ESP_GET
151+  0000 ~                ld c,#0f
152+  0000 ~                rst #20
153+  0000                  endm
154+  0000
155+  0000              ;ввод с консоли ----------------------
156+  0000
157+  0000              ;получить код нажатой клавиши
158+  0000                  macro OS_GET_CHAR ;read char from stdin (out: A=char, 255-no char)
159+  0000 ~                ld c,#10
160+  0000 ~                rst #20
161+  0000                  endm
162+  0000
163+  0000
164+  0000                  ; macro OS_ ;
165+  0000                  ; ld c,#11
166+  0000                  ; rst #20
167+  0000                  ; endm
168+  0000
169+  0000                  ; macro OS_ ;
170+  0000                  ; ld c,#12
171+  0000                  ; rst #20
172+  0000                  ; endm
173+  0000
174+  0000              ;закрыть процесс
175+  0000              ;вх: A - ID процесса
176+  0000              ;останавливается процесс и освобождаются все его страницы памяти, файлы, соединения
177+  0000                  macro OS_PROC_CLOSE ;
178+  0000 ~                ld c,#13
179+  0000 ~                rst #20
180+  0000                  endm
181+  0000
182+  0000
183+  0000              ;прерывания --------------------------
184+  0000
185+  0000              ;установка адреса обработчика прерываний процесса;
186+  0000                  ; macro OS_SET_INTER ;(HL - address, A = 1 - On, A = 0 - Off)
187+  0000                  ; ld c,#14
188+  0000                  ; rst #20
189+  0000                  ; endm
190+  0000
191+  0000
192+  0000              ;плеер AY ----------------------------
193+  0000
194+  0000              ;инициализация плеера AY;
195+  0000                  macro OS_VTPL_INIT ;(HL - address music)
196+  0000 ~                ld c,#15
197+  0000 ~                rst #20
198+  0000                  endm
199+  0000
200+  0000              ;запустить плеер AY (система будет сама вызывать его каждое прерывание);
201+  0000                  macro OS_VTPL_PLAY ;()
202+  0000 ~                ld c,#16
203+  0000 ~                rst #20
204+  0000                  endm
205+  0000
206+  0000              ;заглушить плеер AY;
207+  0000                  macro OS_VTPL_MUTE ;()
208+  0000 ~                ld c,#17
209+  0000 ~                rst #20
210+  0000                  endm
211+  0000
212+  0000              ;получить значение переменной плеера;
213+  0000                  macro OS_GET_VTPL_SETUP ;(out: HL - setup address)
214+  0000 ~                ld c,#18
215+  0000 ~                rst #20
216+  0000                  endm
217+  0000
218+  0000
219+  0000              ;прочие ------------------------------
220+  0000
221+  0000
222+  0000              ;скопировать данные из страницы в страницу
223+  0000              ;вх: hl - откуда (абсолютный адрес 0-ffff); de - куда; ix - длина; a - страница слот2; b - страница слот3;
224+  0000                  macro OS_RAM_COPY
225+  0000 ~                ld c,#19
226+  0000 ~                rst #20
227+  0000                  endm
228+  0000
229+  0000              ;получить дополнительную страницу памяти;
230+  0000                  macro OS_GET_PAGE ;(out A - number page)
231+  0000 ~                ld c,#1a
232+  0000 ~                rst #20
233+  0000                  endm
234+  0000
235+  0000              ;включить страницу в слот 2 (#8000); предварительно зарезервировать страницу OS_GET_PAGE
236+  0000                  macro OS_SET_PAGE_SLOT2 ;(A - page number)
237+  0000 ~                ld c,#1b
238+  0000 ~                rst #20
239+  0000                  endm
240+  0000
241+  0000              ;включить страницу в слот 3 (#C000); предварительно зарезервировать страницу OS_GET_PAGE
242+  0000                  macro OS_SET_PAGE_SLOT3 ;(A - page number)
243+  0000 ~                ld c,#1c
244+  0000 ~                rst #20
245+  0000                  endm
246+  0000
247+  0000              ;включить экран N;
248+  0000                  macro OS_SET_SCREEN ;(A - number screen 5, 7, 39, 3a)
249+  0000 ~                ld c,#1d
250+  0000 ~                rst #20
251+  0000                  endm
252+  0000
253+  0000
254+  0000              ;получить номера страниц процесса;
255+  0000              ;вх:
256+  0000              ;вых: b, c - страницы в слотах 2, 3
257+  0000                  macro OS_GET_MAIN_PAGES ;
258+  0000 ~                ld c,#1e
259+  0000 ~                rst #20
260+  0000                  endm
261+  0000
262+  0000              ;получить значение системного таймера
263+  0000                  macro OS_GET_TIMER ;(out: HL, DE - timer)
264+  0000 ~                ld c,#1F
265+  0000 ~                rst #20
266+  0000                  endm
267+  0000
268+  0000
269+  0000
270+  0000                  ; macro OS_ ;
271+  0000                  ; ld c,#20
272+  0000                  ; rst #20
273+  0000                  ; endm
274+  0000
275+  0000
276+  0000              ;дисковые операции -------------------
277+  0000
278+  0000              ;открыть файл для чтения или записи
279+  0000                  macro OS_FILE_OPEN ;HL - File name (out: A - id file, bc, de - size)
280+  0000 ~                ld c,#21
281+  0000 ~                rst #20
282+  0000                  endm
283+  0000
284+  0000              ;создать файл
285+  0000                  macro OS_FILE_CREATE ;HL - File name  (out: A - id file)
286+  0000 ~                ld c,#22
287+  0000 ~                rst #20
288+  0000                  endm
289+  0000
290+  0000              ;прочитать из файла
291+  0000                  macro OS_FILE_READ ;HL - address, A - id file, DE - length (out: bc - size readed)
292+  0000 ~                ld c,#23
293+  0000 ~                rst #20
294+  0000                  endm
295+  0000
296+  0000              ;записать в файл
297+  0000                  macro OS_FILE_WRITE ;HL - address, A - id file, DE - length (out: bc - size writed)
298+  0000 ~                ld c,#24
299+  0000 ~                rst #20
300+  0000                  endm
301+  0000
302+  0000              ;закрыть файл
303+  0000                  macro OS_FILE_CLOSE ;A - id file
304+  0000 ~                ld c,#25
305+  0000 ~                rst #20
306+  0000                  endm
307+  0000
308+  0000                  ; macro OS_ ;
309+  0000                  ; ld c,#26
310+  0000                  ; rst #20
311+  0000                  ; endm
312+  0000
313+  0000                  ; macro OS_ ;
314+  0000                  ; ld c,#27
315+  0000                  ; rst #20
316+  0000                  ; endm
317+  0000
318+  0000                  ; macro OS_ ;
319+  0000                  ; ld c,#28
320+  0000                  ; rst #20
321+  0000                  ; endm
322+  0000
323+  0000                  ; macro OS_ ;
324+  0000                  ; ld c,#29
325+  0000                  ; rst #20
326+  0000                  ; endm
327+  0000
328+  0000
# file closed: os_defs.asm
  4   0000              	org PROGSTART
  5   8000              start_cmd
  6   8000
  7   8000 21 29 80     	ld hl,msg_title_cmd
  8   8003              	OS_PRINTZ
  8   8003 0E 09       >    ld c,#09
  8   8005 E7          >    rst #20
  9   8006
 10   8006 3E 05        	ld a,5
 11   8008 06 0C        	ld b,#c
 12   800A              	OS_SET_COLOR
 12   800A 0E 06       >    ld c,#06
 12   800C E7          >    rst #20
 13   800D
 14   800D 21 29 80     	ld hl,msg_title_cmd
 15   8010              	OS_PRINTZ
 15   8010 0E 09       >    ld c,#09
 15   8012 E7          >    rst #20
 16   8013
 17   8013 3E 3E        	ld a,">" ;приглашение
 18   8015              	OS_PRINT_CHARF
 18   8015 D7          >	rst #10
 19   8016
 20   8016
 21   8016              cmd_loop
 22   8016              	OS_WAIT
 22   8016 DF          >	rst #18
 23   8017              	OS_GET_CHAR ;получить нажатую клавишу
 23   8017 0E 10       >    ld c,#10
 23   8019 E7          >    rst #20
 24   801A FE FF        	cp 255
 25   801C 28 F8        	jr z,cmd_loop
 26   801E FE 0D        	cp 13
 27   8020 28 04        	jr z,cmd_loop_print
 28   8022 FE 20        	cp " "
 29   8024 38 F0        	jr c,cmd_loop ;символы до пробела не печатаем
 30   8026              cmd_loop_print
 31   8026              	OS_PRINT_CHARF ;печать символа
 31   8026 D7          >	rst #10
 32   8027 18 ED        	jr cmd_loop
 33   8029
 34   8029
 35   8029              msg_title_cmd
 36   8029 63 6D 64 20  	db "cmd ver 2024 10 17",13,10,0
 36   802D 76 65 72 20
 36   8031 32 30 32 34
 36   8035 20 31 30 20
 36   8039 31 37 0D 0A
 36   803D 00
 37   803E
 38   803E              end_cmd
 39   803E              	;SAVETRD "OS.TRD",|"cmd.C",start_cmd,$-start_cmd
 40   803E              	savebin "cmd.com",start_cmd,$-start_cmd
# file closed: cmd.asm
