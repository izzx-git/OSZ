# file opened: cmd.asm
  1   0000              ;cmd - приложение для OS
  2   0000                 device ZXSPECTRUM128
  3   0000              	include "os_defs.asm"
# file opened: os_defs.asm
  1+  0000              ;Список всех вызовов (функций) ОС GMX
  2+  0000
  3+  0000              ;Включить в свой код (в начале файла):
  4+  0000              	; include os_defs.asm
  5+  0000
  6+  0000              ;Использовать только имена функций, коды могут поменяться
  7+  0000
  8+  0000              ;например:
  9+  0000              	; org PROGSTART
 10+  0000              	; ../include os_defs.asm
 11+  0000              	; ld hl,text
 12+  0000              	; OS_PRINTZ ;печать	до кода 0
 13+  0000
 14+  0000              ;сохранность регистров не гарантируется
 15+  0000              ;на выходе обычно (но не всегда) CY=1 = ошибка
 16+  0000
 17+  0000              PROGSTART equ #8000 ;адрес старта приложений
 18+  0000
 19+  0000
 20+  0000              ;вывод в консоль --------------------
 21+  0000
 22+  0000              ;печать символа в консоль (ускоренная)
 23+  0000              	MACRO OS_PRINT_CHARF ;a=char
 24+  0000 ~            	rst #10
 25+  0000              	ENDM
 26+  0000
 27+  0000              ;очистить консоль
 28+  0000              	macro OS_CLS ;clear visible area of terminal
 29+  0000 ~                ld c,#00
 30+  0000 ~                rst #20
 31+  0000                  endm
 32+  0000
 33+  0000              ;установить позицию курсора в консоли
 34+  0000                  macro OS_SET_XY ;de=yx ;SET CURSOR POSITION
 35+  0000 ~                ld c,#01
 36+  0000 ~                rst #20
 37+  0000                  endm
 38+  0000
 39+  0000              ;печать символа в консоль
 40+  0000                  macro OS_PRINT_CHAR ;a=char
 41+  0000 ~                ld c,#02
 42+  0000 ~                rst #20
 43+  0000                  endm
 44+  0000
 45+  0000              ;заполнение строки одним символом
 46+  0000                  macro OS_FILL_LINE ;; H - line ; A - char
 47+  0000 ~                ld c,#03
 48+  0000 ~                rst #20
 49+  0000                  endm
 50+  0000
 51+  0000              ;покрасить строку цветом
 52+  0000                  macro OS_PAINT_LINE ;a - line, b - color
 53+  0000 ~                ld c,#04
 54+  0000 ~                rst #20
 55+  0000                  endm
 56+  0000
 57+  0000
 58+  0000                  ; macro OS_ ;
 59+  0000                  ; ld c,#05
 60+  0000                  ; rst #20
 61+  0000                  ; endm
 62+  0000
 63+  0000              ;установить цвет текста в консоли;
 64+  0000                  macro OS_SET_COLOR ;a = color, b = color 2 (highlight)
 65+  0000 ~                ld c,#06
 66+  0000 ~                rst #20
 67+  0000                  endm
 68+  0000
 69+  0000                  ; macro OS_ ;
 70+  0000                  ; ld c,#07
 71+  0000                  ; rst #20
 72+  0000                  ; endm
 73+  0000
 74+  0000                  ; macro OS_ ;
 75+  0000                  ; ld c,#08
 76+  0000                  ; rst #20
 77+  0000                  ; endm
 78+  0000
 79+  0000
 80+  0000
 81+  0000              ;печать в консоль до кода 0
 82+  0000                  macro OS_PRINTZ ;hl=text ;PRINT to 0
 83+  0000 ~                ld c,#09
 84+  0000 ~                rst #20
 85+  0000                  endm
 86+  0000
 87+  0000
 88+  0000                  ; macro OS_
 89+  0000                  ; ld c,#0a
 90+  0000                  ; rst #20
 91+  0000                  ; endm
 92+  0000
 93+  0000                  ; macro OS_
 94+  0000                  ; ld c,#0b
 95+  0000                  ; rst #20
 96+  0000                  ; endm
 97+  0000
 98+  0000              ;закрыть соединение ESP
 99+  0000              ;вх:
100+  0000              ;вых: CY=0 - OK; CY=1 - занято другим процессом
101+  0000                  macro OS_ESP_CLOSE
102+  0000 ~                ld c,#0c
103+  0000 ~                rst #20
104+  0000                  endm
105+  0000
106+  0000              ;установить соединение ESP (CIPSTART);
107+  0000              ;вх: a - тип соединения 0-tcp, 1-udp, 2-ssl; hl - строка адрес, de - строка порт
108+  0000              ;вых: CY=0 - OK; CY=1 - занято другим процессом или нет uart
109+  0000              ;вых: ix - адрес в таблице соединений (ix+2 - флаг открытия =1 - открыто, 255 - ошибка);
110+  0000                  macro OS_ESP_OPEN
111+  0000 ~                ld c,#0d
112+  0000 ~                rst #20
113+  0000                  endm
114+  0000
115+  0000              ;послать запрос ESP (CIPSEND);
116+  0000              ;вх: hl - адрес данных, de - длина данных
117+  0000              ;вых: CY=0 - OK; CY=1 - занято другим процессом
118+  0000              ;вых: ix - адрес в таблице соединений (ix+4 - флаг =1 - отправлено, 255 - ошибка)
119+  0000                  macro OS_ESP_SEND
120+  0000 ~                ld c,#0e
121+  0000 ~                rst #20
122+  0000                  endm
123+  0000
124+  0000              ;получить пакет ESP (+IPD);
125+  0000              ;вх: hl - адрес для данных
126+  0000              ;вых: CY=0 - OK; CY=1 - занято другим процессом
127+  0000              ;вых: ix - адрес в таблице соединений (ix+6 - флаг =1 - принято, 255 - ошибка)
128+  0000                  macro OS_ESP_GET
129+  0000 ~                ld c,#0f
130+  0000 ~                rst #20
131+  0000                  endm
132+  0000
133+  0000              ;ввод с консоли ----------------------
134+  0000
135+  0000              ;получить код нажатой клавиши
136+  0000                  macro OS_GET_CHAR ;read char from stdin (out: A=char, 255-no char)
137+  0000 ~                ld c,#10
138+  0000 ~                rst #20
139+  0000                  endm
140+  0000
141+  0000
142+  0000                  ; macro OS_ ;
143+  0000                  ; ld c,#11
144+  0000                  ; rst #20
145+  0000                  ; endm
146+  0000
147+  0000                  ; macro OS_ ;
148+  0000                  ; ld c,#12
149+  0000                  ; rst #20
150+  0000                  ; endm
151+  0000
152+  0000                  ; macro OS_ ;
153+  0000                  ; ld c,#13
154+  0000                  ; rst #20
155+  0000                  ; endm
156+  0000
157+  0000
158+  0000              ;прерывания --------------------------
159+  0000
160+  0000              ;установка адреса обработчика прерываний процесса;
161+  0000                  ; macro OS_SET_INTER ;(HL - address, A = 1 - On, A = 0 - Off)
162+  0000                  ; ld c,#14
163+  0000                  ; rst #20
164+  0000                  ; endm
165+  0000
166+  0000
167+  0000              ;плеер AY ----------------------------
168+  0000
169+  0000              ;инициализация плеера AY;
170+  0000                  macro OS_VTPL_INIT ;(HL - address music)
171+  0000 ~                ld c,#15
172+  0000 ~                rst #20
173+  0000                  endm
174+  0000
175+  0000              ;запустить плеер AY (система будет сама вызывать его каждое прерывание);
176+  0000                  macro OS_VTPL_PLAY ;()
177+  0000 ~                ld c,#16
178+  0000 ~                rst #20
179+  0000                  endm
180+  0000
181+  0000              ;заглушить плеер AY;
182+  0000                  macro OS_VTPL_MUTE ;()
183+  0000 ~                ld c,#17
184+  0000 ~                rst #20
185+  0000                  endm
186+  0000
187+  0000              ;получить значение переменной плеера;
188+  0000                  macro OS_GET_VTPL_SETUP ;(out: HL - setup address)
189+  0000 ~                ld c,#18
190+  0000 ~                rst #20
191+  0000                  endm
192+  0000
193+  0000
194+  0000              ;прочие ------------------------------
195+  0000
196+  0000
197+  0000              ;скопировать данные из страницы в страницу
198+  0000              ;вх: hl - откуда (абсолютный адрес 0-ffff); de - куда; ix - длина; a - страница слот2; b - страница слот3;
199+  0000                  macro OS_RAM_COPY
200+  0000 ~                ld c,#19
201+  0000 ~                rst #20
202+  0000                  endm
203+  0000
204+  0000              ;получить дополнительную страницу памяти;
205+  0000                  macro OS_GET_PAGE ;(out A - number page)
206+  0000 ~                ld c,#1a
207+  0000 ~                rst #20
208+  0000                  endm
209+  0000
210+  0000              ;включить страницу в слот 2 (#8000); предварительно зарезервировать страницу OS_GET_PAGE
211+  0000                  macro OS_SET_PAGE_SLOT2 ;(A - page number)
212+  0000 ~                ld c,#1b
213+  0000 ~                rst #20
214+  0000                  endm
215+  0000
216+  0000              ;включить страницу в слот 3 (#C000); предварительно зарезервировать страницу OS_GET_PAGE
217+  0000                  macro OS_SET_PAGE_SLOT3 ;(A - page number)
218+  0000 ~                ld c,#1c
219+  0000 ~                rst #20
220+  0000                  endm
221+  0000
222+  0000              ;включить экран N;
223+  0000                  macro OS_SET_SCREEN ;(A - number screen 5, 7, 39, 3a)
224+  0000 ~                ld c,#1d
225+  0000 ~                rst #20
226+  0000                  endm
227+  0000
228+  0000
229+  0000              ;получить номера страниц процесса;
230+  0000              ;вх:
231+  0000              ;вых: b, c - страницы в слотах 2, 3
232+  0000                  macro OS_GET_MAIN_PAGES ;
233+  0000 ~                ld c,#1e
234+  0000 ~                rst #20
235+  0000                  endm
236+  0000
237+  0000              ;получить значение системного таймера
238+  0000                  macro OS_GET_TIMER ;(out: HL, DE - timer)
239+  0000 ~                ld c,#1F
240+  0000 ~                rst #20
241+  0000                  endm
242+  0000
243+  0000
244+  0000
245+  0000                  ; macro OS_ ;
246+  0000                  ; ld c,#20
247+  0000                  ; rst #20
248+  0000                  ; endm
249+  0000
250+  0000
251+  0000              ;дисковые операции -------------------
252+  0000
253+  0000              ;открыть файл для чтения или записи
254+  0000                  macro OS_FILE_OPEN ;HL - File name (out: A - id file, bc, de - size)
255+  0000 ~                ld c,#21
256+  0000 ~                rst #20
257+  0000                  endm
258+  0000
259+  0000              ;создать файл
260+  0000                  macro OS_FILE_CREATE ;HL - File name  (out: A - id file)
261+  0000 ~                ld c,#22
262+  0000 ~                rst #20
263+  0000                  endm
264+  0000
265+  0000              ;прочитать из файла
266+  0000                  macro OS_FILE_READ ;HL - address, A - id file, DE - length (out: bc - size readed)
267+  0000 ~                ld c,#23
268+  0000 ~                rst #20
269+  0000                  endm
270+  0000
271+  0000              ;записать в файл
272+  0000                  macro OS_FILE_WRITE ;HL - address, A - id file, DE - length (out: bc - size writed)
273+  0000 ~                ld c,#24
274+  0000 ~                rst #20
275+  0000                  endm
276+  0000
277+  0000              ;закрыть файл
278+  0000                  macro OS_FILE_CLOSE ;A - id file
279+  0000 ~                ld c,#25
280+  0000 ~                rst #20
281+  0000                  endm
282+  0000
283+  0000                  ; macro OS_ ;
284+  0000                  ; ld c,#26
285+  0000                  ; rst #20
286+  0000                  ; endm
287+  0000
288+  0000                  ; macro OS_ ;
289+  0000                  ; ld c,#27
290+  0000                  ; rst #20
291+  0000                  ; endm
292+  0000
293+  0000                  ; macro OS_ ;
294+  0000                  ; ld c,#28
295+  0000                  ; rst #20
296+  0000                  ; endm
297+  0000
298+  0000                  ; macro OS_ ;
299+  0000                  ; ld c,#29
300+  0000                  ; rst #20
301+  0000                  ; endm
302+  0000
303+  0000
# file closed: os_defs.asm
  4   0000              	org PROGSTART
  5   8000              start_cmd
  6   8000
  7   8000 21 29 80     	ld hl,msg_title_cmd
  8   8003              	OS_PRINTZ
  8   8003 0E 09       >    ld c,#09
  8   8005 E7          >    rst #20
  9   8006
 10   8006 3E 05        	ld a,5
 11   8008 06 0C        	ld b,#c
 12   800A              	OS_SET_COLOR
 12   800A 0E 06       >    ld c,#06
 12   800C E7          >    rst #20
 13   800D
 14   800D 21 29 80     	ld hl,msg_title_cmd
 15   8010              	OS_PRINTZ
 15   8010 0E 09       >    ld c,#09
 15   8012 E7          >    rst #20
 16   8013
 17   8013 3E 3E        	ld a,">" ;приглашение
 18   8015              	OS_PRINT_CHARF
 18   8015 D7          >	rst #10
 19   8016
 20   8016
 21   8016              cmd_loop
 22   8016 76           	halt
 23   8017              	OS_GET_CHAR ;получить нажатую клавишу
 23   8017 0E 10       >    ld c,#10
 23   8019 E7          >    rst #20
 24   801A FE FF        	cp 255
 25   801C 28 F8        	jr z,cmd_loop
 26   801E FE 0D        	cp 13
 27   8020 28 04        	jr z,cmd_loop_print
 28   8022 FE 20        	cp " "
 29   8024 38 F0        	jr c,cmd_loop ;символы до пробела не печатаем
 30   8026              cmd_loop_print
 31   8026              	OS_PRINT_CHARF ;печать символа
 31   8026 D7          >	rst #10
 32   8027 18 ED        	jr cmd_loop
 33   8029
 34   8029
 35   8029              msg_title_cmd
 36   8029 63 6D 64 20  	db "cmd ver 2024 10 17",13,10,0
 36   802D 76 65 72 20
 36   8031 32 30 32 34
 36   8035 20 31 30 20
 36   8039 31 37 0D 0A
 36   803D 00
 37   803E
 38   803E              end_cmd
 39   803E              	;SAVETRD "OS.TRD",|"cmd.C",start_cmd,$-start_cmd
 40   803E              	savebin "cmd.com",start_cmd,$-start_cmd
# file closed: cmd.asm
