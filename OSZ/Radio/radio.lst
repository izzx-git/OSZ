# file opened: radio.asm
   1  0000              ;Radio - приложение для OS GMX
   2  0000                 device ZXSPECTRUM128
   3  0000              	include "../os_defs.asm"
# file opened: ../os_defs.asm
   1+ 0000              ;Список всех вызовов (функций) ОС GMX
   2+ 0000
   3+ 0000              ;Включить в свой код (в начале файла):
   4+ 0000              	; include os_defs.asm
   5+ 0000
   6+ 0000              ;Использовать только имена функций, коды могут поменяться
   7+ 0000
   8+ 0000              ;например:
   9+ 0000              	; org PROG_START
  10+ 0000              	; ../include os_defs.asm
  11+ 0000              	; ld hl,text
  12+ 0000              	; OS_PRINTZ ;печать	до кода 0
  13+ 0000
  14+ 0000              ;сохранность регистров не гарантируется
  15+ 0000              ;на выходе обычно (но не всегда) CY=1 = ошибка
  16+ 0000
  17+ 0000              PROG_START equ #8000 ;адрес старта приложений
  18+ 0000              ESP_PACKET_MAX equ 3000 ;предполагаемый максимальный размер пакета от ESP. Размер может быть разным на разных прошивках.
  19+ 0000
  20+ 0000
  21+ 0000              ;короткие вызовы (именные RST) -------------------------
  22+ 0000
  23+ 0000              ;печать символа в консоль (ускоренная)
  24+ 0000              	MACRO OS_PRINT_CHARF ;a=char
  25+ 0000 ~            	rst #10
  26+ 0000              	ENDM
  27+ 0000
  28+ 0000
  29+ 0000              ;передача управления ОС до следующего прерывания (когда придёт очередь процесса в следующий раз);
  30+ 0000              ;все регистры сохраняются
  31+ 0000              ;рекомендуется использовать вместо обычного halt
  32+ 0000              	MACRO OS_WAIT
  33+ 0000 ~            	rst #18
  34+ 0000              	ENDM
  35+ 0000
  36+ 0000              	; MACRO OS_
  37+ 0000              	; rst #28
  38+ 0000              	; ENDM
  39+ 0000
  40+ 0000              	; MACRO OS_
  41+ 0000              	; rst #30
  42+ 0000              	; ENDM
  43+ 0000
  44+ 0000
  45+ 0000
  46+ 0000              ;вызовы через единую точку входа RST #20 ----------------
  47+ 0000
  48+ 0000              ;вывод в консоль --------------------
  49+ 0000
  50+ 0000              ;очистить консоль
  51+ 0000              	macro OS_CLS ;clear visible area of terminal
  52+ 0000 ~                ld c,#00
  53+ 0000 ~                rst #20
  54+ 0000                  endm
  55+ 0000
  56+ 0000              ;установить позицию курсора в консоли
  57+ 0000                  macro OS_SET_XY ;de=yx ;SET CURSOR POSITION
  58+ 0000 ~                ld c,#01
  59+ 0000 ~                rst #20
  60+ 0000                  endm
  61+ 0000
  62+ 0000              ;печать символа в консоль
  63+ 0000                  macro OS_PRINT_CHAR ;a=char
  64+ 0000 ~                ld c,#02
  65+ 0000 ~                rst #20
  66+ 0000                  endm
  67+ 0000
  68+ 0000              ;заполнение строки одним символом
  69+ 0000                  macro OS_FILL_LINE ;; H - line ; A - char
  70+ 0000 ~                ld c,#03
  71+ 0000 ~                rst #20
  72+ 0000                  endm
  73+ 0000
  74+ 0000              ;покрасить строку цветом
  75+ 0000                  macro OS_PAINT_LINE ;a - line, b - color
  76+ 0000 ~                ld c,#04
  77+ 0000 ~                rst #20
  78+ 0000                  endm
  79+ 0000
  80+ 0000
  81+ 0000                  ; macro OS_ ;
  82+ 0000                  ; ld c,#05
  83+ 0000                  ; rst #20
  84+ 0000                  ; endm
  85+ 0000
  86+ 0000              ;установить цвет текста в консоли;
  87+ 0000                  macro OS_SET_COLOR ;a = color, b = color 2 (highlight)
  88+ 0000 ~                ld c,#06
  89+ 0000 ~                rst #20
  90+ 0000                  endm
  91+ 0000
  92+ 0000                  ; macro OS_ ;
  93+ 0000                  ; ld c,#07
  94+ 0000                  ; rst #20
  95+ 0000                  ; endm
  96+ 0000
  97+ 0000
  98+ 0000              ;включить/выключить моно режим для приложения
  99+ 0000              ;при включенном режиме разрешена запись в диапазон памяти #4000-#7fff + страницы приложения
 100+ 0000              ;вх: a = 0 - включить; a = 255 - выключить
 101+ 0000                  macro OS_SET_MONO_MODE ;
 102+ 0000 ~                ld c,#08
 103+ 0000 ~                rst #20
 104+ 0000                  endm
 105+ 0000
 106+ 0000
 107+ 0000
 108+ 0000              ;печать в консоль до кода 0
 109+ 0000                  macro OS_PRINTZ ;hl=text ;PRINT to 0
 110+ 0000 ~                ld c,#09
 111+ 0000 ~                rst #20
 112+ 0000                  endm
 113+ 0000
 114+ 0000
 115+ 0000              ;прочитать байт из порта uart
 116+ 0000              ;вх:
 117+ 0000              ;вых: CY=0 - OK; CY=1 - занято другим процессом или нет uart или нет данных для приёма
 118+ 0000              ;вых: A - считанный байт
 119+ 0000                  macro OS_UART_READ
 120+ 0000 ~                ld c,#0a
 121+ 0000 ~                rst #20
 122+ 0000                  endm
 123+ 0000
 124+ 0000              ;записать байт в порт uart
 125+ 0000              ;вх: A -байт
 126+ 0000              ;вых: CY=0 - OK; CY=1 - занято другим процессом или нет uart
 127+ 0000                  macro OS_UART_WRITE
 128+ 0000 ~                ld c,#0b
 129+ 0000 ~                rst #20
 130+ 0000                  endm
 131+ 0000
 132+ 0000              ;закрыть соединение ESP
 133+ 0000              ;вх:
 134+ 0000              ;вых: CY=0 - OK; CY=1 - занято другим процессом или нет uart
 135+ 0000                  macro OS_ESP_CLOSE
 136+ 0000 ~                ld c,#0c
 137+ 0000 ~                rst #20
 138+ 0000                  endm
 139+ 0000
 140+ 0000              ;установить соединение ESP (CIPSTART);
 141+ 0000              ;вх: a - тип соединения 0-tcp, 1-udp, 2-ssl; 3-прямое соединение с портом; hl - строка адрес, de - строка порт
 142+ 0000              ;вых: CY=0 - OK; CY=1 - занято другим процессом или нет uart
 143+ 0000              ;вых: ix - адрес в таблице соединений (ix+2 - флаг открытия =1 - открыто, 255 - ошибка);
 144+ 0000                  macro OS_ESP_OPEN
 145+ 0000 ~                ld c,#0d
 146+ 0000 ~                rst #20
 147+ 0000                  endm
 148+ 0000
 149+ 0000              ;послать запрос ESP (CIPSEND);
 150+ 0000              ;вх: hl - адрес данных, de - длина данных
 151+ 0000              ;вых: CY=0 - OK; CY=1 - занято другим процессом или нет uart
 152+ 0000              ;вых: ix - адрес в таблице соединений (ix+4 - флаг =1 - отправлено, 255 - ошибка)
 153+ 0000                  macro OS_ESP_SEND
 154+ 0000 ~                ld c,#0e
 155+ 0000 ~                rst #20
 156+ 0000                  endm
 157+ 0000
 158+ 0000              ;получить пакет ESP (+IPD);
 159+ 0000              ;вх: hl - адрес для данных (рекомендуется зарезервировать место не меньше размера ESP_PACKET_MAX)
 160+ 0000              ;вых: CY=0 - OK; CY=1 - занято другим процессом или нет uart
 161+ 0000              ;вых: ix - адрес в таблице соединений (ix+6 - флаг =1 - принято, 255 - ошибка)
 162+ 0000                  macro OS_ESP_GET
 163+ 0000 ~                ld c,#0f
 164+ 0000 ~                rst #20
 165+ 0000                  endm
 166+ 0000
 167+ 0000              ;ввод с консоли ----------------------
 168+ 0000
 169+ 0000              ;получить код нажатой клавиши
 170+ 0000                  macro OS_GET_CHAR ;read char from stdin (out: A=char, 255-no char)
 171+ 0000 ~                ld c,#10
 172+ 0000 ~                rst #20
 173+ 0000                  endm
 174+ 0000
 175+ 0000
 176+ 0000              ;процессы ----------------------------
 177+ 0000
 178+ 0000              ;запустить процесс
 179+ 0000              ;вх: hl - имя файла (заканчивается на 0)
 180+ 0000                  macro OS_PROC_RUN ;
 181+ 0000 ~                ld c,#11
 182+ 0000 ~                rst #20
 183+ 0000                  endm
 184+ 0000
 185+ 0000              ;установить фокус
 186+ 0000              ;вх: a - id процесса
 187+ 0000                  macro OS_PROC_SET_FOCUS ;
 188+ 0000 ~                ld c,#12
 189+ 0000 ~                rst #20
 190+ 0000                  endm
 191+ 0000
 192+ 0000              ;закрыть процесс
 193+ 0000              ;вх: A - ID процесса. Если A=0, закрыть текущий (себя)
 194+ 0000              ;останавливается процесс и освобождаются все его страницы памяти, файлы, соединения
 195+ 0000                  macro OS_PROC_CLOSE ;
 196+ 0000 ~                ld c,#13
 197+ 0000 ~                rst #20
 198+ 0000                  endm
 199+ 0000
 200+ 0000
 201+ 0000              ;прерывания --------------------------
 202+ 0000
 203+ 0000              ;установка адреса обработчика прерываний процесса;
 204+ 0000              ;например, плеера музыки
 205+ 0000              ;включать прерывания во время работы обработчика нельзя. время работы, по возможности, минимальное
 206+ 0000              ;на время выполнения включаются обе страницы процесса
 207+ 0000                  macro OS_SET_INTER ;(HL - address, address = 0 = отключить)
 208+ 0000 ~                ld c,#14
 209+ 0000 ~                rst #20
 210+ 0000                  endm
 211+ 0000
 212+ 0000
 213+ 0000              ;плеер AY ----------------------------
 214+ 0000
 215+ 0000              ;инициализация плеера AY;
 216+ 0000                  macro OS_VTPL_INIT ;(HL - address music)
 217+ 0000 ~                ld c,#15
 218+ 0000 ~                rst #20
 219+ 0000                  endm
 220+ 0000
 221+ 0000              ;запустить плеер AY (система будет сама вызывать его каждое прерывание);
 222+ 0000                  macro OS_VTPL_PLAY ;()
 223+ 0000 ~                ld c,#16
 224+ 0000 ~                rst #20
 225+ 0000                  endm
 226+ 0000
 227+ 0000              ;заглушить плеер AY;
 228+ 0000                  macro OS_VTPL_MUTE ;()
 229+ 0000 ~                ld c,#17
 230+ 0000 ~                rst #20
 231+ 0000                  endm
 232+ 0000
 233+ 0000              ;получить значение переменной плеера;
 234+ 0000                  macro OS_GET_VTPL_SETUP ;(out: HL - setup address)
 235+ 0000 ~                ld c,#18
 236+ 0000 ~                rst #20
 237+ 0000                  endm
 238+ 0000
 239+ 0000
 240+ 0000              ;прочие ------------------------------
 241+ 0000
 242+ 0000
 243+ 0000              ;скопировать данные из страницы в страницу
 244+ 0000              ;вх: hl - откуда (абсолютный адрес 0-ffff); de - куда; ix - длина; a - страница слот2; b - страница слот3;
 245+ 0000                  macro OS_RAM_COPY
 246+ 0000 ~                ld c,#19
 247+ 0000 ~                rst #20
 248+ 0000                  endm
 249+ 0000
 250+ 0000              ;получить дополнительную страницу памяти;
 251+ 0000                  macro OS_GET_PAGE ;(out A - number page)
 252+ 0000 ~                ld c,#1a
 253+ 0000 ~                rst #20
 254+ 0000                  endm
 255+ 0000
 256+ 0000              ;включить страницу в слот 2 (#8000); предварительно зарезервировать страницу OS_GET_PAGE
 257+ 0000                  macro OS_SET_PAGE_SLOT2 ;(A - page number)
 258+ 0000 ~                ld c,#1b
 259+ 0000 ~                rst #20
 260+ 0000                  endm
 261+ 0000
 262+ 0000              ;включить страницу в слот 3 (#C000); предварительно зарезервировать страницу OS_GET_PAGE
 263+ 0000                  macro OS_SET_PAGE_SLOT3 ;(A - page number)
 264+ 0000 ~                ld c,#1c
 265+ 0000 ~                rst #20
 266+ 0000                  endm
 267+ 0000
 268+ 0000              ;включить экран N;
 269+ 0000              ;вх: A - номер экрана (5(!), 7, #39, #3a; 0 = текстовый)
 270+ 0000              ;переключать может только приложение в фокусе
 271+ 0000              ;если режим не текстовый, то приложение работает только когда в фокусе. Иначе временно останавливается.
 272+ 0000              ;при переключении процессов сохраняется только экран #39
 273+ 0000              ;экран 5 использовать не желательно, там может быть буфер сети ESP или приложение в монопольном режиме (см. OS_SET_MONO_MODE)
 274+ 0000                  macro OS_SET_SCREEN ;
 275+ 0000 ~                ld c,#1d
 276+ 0000 ~                rst #20
 277+ 0000                  endm
 278+ 0000
 279+ 0000
 280+ 0000              ;получить номера страниц процесса;
 281+ 0000              ;вх:
 282+ 0000              ;вых: b, c - страницы в слотах 2, 3
 283+ 0000                  macro OS_GET_MAIN_PAGES ;
 284+ 0000 ~                ld c,#1e
 285+ 0000 ~                rst #20
 286+ 0000                  endm
 287+ 0000
 288+ 0000              ;получить значение системного таймера
 289+ 0000                  macro OS_GET_TIMER ;(out: HL, DE - timer)
 290+ 0000 ~                ld c,#1F
 291+ 0000 ~                rst #20
 292+ 0000                  endm
 293+ 0000
 294+ 0000
 295+ 0000              ;освободить страницу памяти
 296+ 0000              ;вх: a - номер страницы
 297+ 0000                  macro OS_DEL_PAGE ;
 298+ 0000 ~                ld c,#20
 299+ 0000 ~                rst #20
 300+ 0000                  endm
 301+ 0000
 302+ 0000
 303+ 0000              ;дисковые операции -------------------
 304+ 0000
 305+ 0000              ; менять напрямую что-то в таблице fcb из приложения не рекомендуется, только для чтения
 306+ 0000
 307+ 0000              ; fcbFAT (из руководства к монитору)
 308+ 0000              ; формат fcb для работы с FAT
 309+ 0000
 310+ 0000              ; +#00 8 имя файла
 311+ 0000              ; +#08 3 расширение файла
 312+ 0000              ; +#0B 1 атрибуты файла
 313+ 0000              ; +#0C 4 номер первого кластера файла/каталога
 314+ 0000              ; +#10 4 номер первого кластера каталога с этим файлом/каталогом
 315+ 0000              ; +#14 4 размер файла/каталога в байтах
 316+ 0000              ; +#18 4 указатель в файле
 317+ 0000              ; +#1C 1 для внутренних нужд
 318+ 0000              ; +#1D 1 для внутренних нужд
 319+ 0000              ; +#1E 1 резерв
 320+ 0000              ; +#1F 1 номер винчестера и раздела на нем
 321+ 0000              	; 1-0,nn номер раздела
 322+ 0000              	; 3-2,=00/01/10 HDD master/HDD slave/SD
 323+ 0000              	    ; значение %11 недопустимо
 324+ 0000
 325+ 0000              ;открыть файл для чтения или записи
 326+ 0000                  macro OS_FILE_OPEN ;HL - File name (out: A - id file, de hl - size, IX - fcb)
 327+ 0000 ~                ld c,#21
 328+ 0000 ~                rst #20
 329+ 0000                  endm
 330+ 0000
 331+ 0000              ;создать файл
 332+ 0000                  macro OS_FILE_CREATE ;HL - File name  (out: A - id file, IX - fcb)
 333+ 0000 ~                ld c,#22
 334+ 0000 ~                rst #20
 335+ 0000                  endm
 336+ 0000
 337+ 0000              ;прочитать из файла
 338+ 0000                  macro OS_FILE_READ ;HL - address, A - id file, DE - length (out: hl - следующий адрес для чтения)
 339+ 0000 ~                ld c,#23
 340+ 0000 ~                rst #20
 341+ 0000                  endm
 342+ 0000
 343+ 0000              ;записать в файл
 344+ 0000                  macro OS_FILE_WRITE ;HL - address, A - id file, DE - length (out: hl - следующий адрес для чтения)
 345+ 0000 ~                ld c,#24
 346+ 0000 ~                rst #20
 347+ 0000                  endm
 348+ 0000
 349+ 0000              ;закрыть файл
 350+ 0000                  macro OS_FILE_CLOSE ;A - id file
 351+ 0000 ~                ld c,#25
 352+ 0000 ~                rst #20
 353+ 0000                  endm
 354+ 0000
 355+ 0000              ;чтение секторов текущего каталога
 356+ 0000              ; вх:
 357+ 0000                   ; hl - буфер для чтения
 358+ 0000                   ; de - относительный номер первого сектора каталога для чтения [0..nn]
 359+ 0000                   ; b - максимальное количество секторов для чтения
 360+ 0000              ; вых: cy=1, если были ошибки, код ошибки возвращается в аккумуляторе
 361+ 0000                     ; a=errRWnum
 362+ 0000                     ; a=errInvalidPart
 363+ 0000                     ; a=errFileEmpty
 364+ 0000                   ; cy=0, a=errEoF - каталог закончился
 365+ 0000                     ; hl - следующий адрес в буфере
 366+ 0000                     ; de - номер первого непрочитанного сектора
 367+ 0000                     ; b - не прочитано секторов
 368+ 0000                   ; cy=0 - считано успешно
 369+ 0000                     ; hl - следующий адрес в буфере
 370+ 0000                     ; de - номер первого непрочитанного сектора
 371+ 0000                     ; b=#00
 372+ 0000                  macro OS_DIR_READ ;
 373+ 0000 ~                ld c,#26
 374+ 0000 ~                rst #20
 375+ 0000                  endm
 376+ 0000
 377+ 0000              ;вход в каталог/выход в родительский каталог
 378+ 0000              	; Если путь не указан производится только настройка переменных драйвера,
 379+ 0000              	; при этом если передан дескриптор файла, текущий каталог не изменится)
 380+ 0000              	; Если пусть указан, в конец пути добавится название каталога (если это
 381+ 0000              	; переход в родительский, последнее имя в пути удалится).
 382+ 0000              	; Если передан дескриптор файла, текущий каталог не изменится, к пути
 383+ 0000              	; добавится имя файла
 384+ 0000              ; вх:
 385+ 0000                   ; hl - адрес пути (=#0000 - путь отсутствует)
 386+ 0000                   ; de - адрес дескриптора директории/файла
 387+ 0000              ; вых: a - если путь был указан, новая длина пути
 388+ 0000                  macro OS_DIR_OPEN ;
 389+ 0000 ~                ld c,#27
 390+ 0000 ~                rst #20
 391+ 0000                  endm
 392+ 0000
 393+ 0000              ;установка/чтение указателя в файле (Переменная +#18-#1b fcb)
 394+ 0000              ;проверки на допустимость значений не производится
 395+ 0000              ;вх: CY = 1 - установка; CY = 0 - чтение
 396+ 0000              ;вх: A - id файла
 397+ 0000              ;вх: de, hl - значения старшие быйты, младшие
 398+ 0000              ;вых: de, hl - значения старшие быйты, младшие
 399+ 0000                  macro OS_FILE_POSITION ;
 400+ 0000 ~                ld c,#28
 401+ 0000 ~                rst #20
 402+ 0000                  endm
 403+ 0000
 404+ 0000              ; поиск файла или каталога по заданному пути, начиная от корневого, со входом в подкаталоги
 405+ 0000              ;вх: hl - путь к файлу в формате ASCIZ (не более 250 байт, заканчивается нулем)
 406+ 0000              	 ;формат пути: \[DIR\DIR\..\DIR\]filename.ext	(можно без имени файла, только каталоги)
 407+ 0000              ;вх: a=#00/#FF - без установки каталога/с установкой найденного каталога текущим
 408+ 0000                  macro OS_FIND_PATH ;
 409+ 0000 ~                ld c,#29
 410+ 0000 ~                rst #20
 411+ 0000                  endm
 412+ 0000
 413+ 0000
 414+ 0000              ; получение длинного имени файла
 415+ 0000              ;вх: hl - адрес буфера для имени
 416+ 0000              ;    de - номер записи в текущем каталоге
 417+ 0000              ;вых: hl - в буфере имя в формате ASCIZ (если длинное имя отсутсвует, то возвращается короткое имя)
 418+ 0000              ; 	a - длина имени, с учетом нуля
 419+ 0000                  macro OS_GET_LFN ;
 420+ 0000 ~                ld c,#2a
 421+ 0000 ~                rst #20
 422+ 0000                  endm
 423+ 0000
# file closed: ../os_defs.asm
   4  0000              	org PROG_START
   5  8000
   6  8000              ;порядок работы:
   7  8000              ;открытие соединения
   8  8000              ;проверка результата
   9  8000              ;отправка запроса
  10  8000              ;проверка результата
  11  8000              ;принять ответ
  12  8000              ;проверка результата
  13  8000              ;принять ещё пакеты, если есть, до закрытия соединения, или до получения ожидаемой длины
  14  8000              ;закрыть соединение
  15  8000              ;при каждой возможности (в паузах) закрывать соединение, чтобы уступить очередь другим приложениям.
  16  8000
  17  8000              start_radio
  18  8000              	; ld a,13 ;новая строка
  19  8000              	; OS_PRINT_CHARF
  20  8000 21 73 8B     	ld hl,msg_title_radio ;имя приложения
  21  8003              	OS_PRINTZ ;печать
  21  8003 0E 09       >    ld c,#09
  21  8005 E7          >    rst #20
  22  8006
  23  8006
  24  8006              ; radio_get_link
  25  8006              	; ld hl,msg_get_link_id
  26  8006              	; OS_PRINTZ ;печать
  27  8006
  28  8006              	; xor a ;CY=0
  29  8006              	; OS_ESP_LINK_ID ;получить номер соединения
  30  8006              	; jr nc,radio_get_link_ok
  31  8006
  32  8006              	; call radio_main_error
  33  8006              	; jr radio_get_link
  34  8006
  35  8006              ; radio_get_link_ok ;ID получили
  36  8006              	; ld (link_id),a
  37  8006
  38  8006              start_radio_warm
  39  8006 21 2D 89     	ld hl,format_pt3 ;формат
  40  8009 11 86 89     	ld de,request_format
  41  800C 01 03 00     	ld bc,3
  42  800F ED B0        	ldir
  43  8011
  44  8011              	;настроить плеер
  45  8011 3E 21        	ld a,%00100001 ;pt3 auto
  46  8013 32 3B 89     	ld (player_setup),a
  47  8016
  48  8016
  49  8016              start_radio_warm2
  50  8016
  51  8016 21 6B 89     	ld hl,start_request ;очистить номер первого трека
  52  8019 11 6C 89     	ld de,start_request+1
  53  801C 01 04 00     	ld bc,5-1
  54  801F 36 30        	ld (hl),"0"
  55  8021 ED B0        	ldir
  56  8023
  57  8023 21 00 00     	ld hl,0
  58  8026 22 27 89     	ld (cur_track),hl ;первый трек
  59  8029 22 23 89     	ld (total_track),hl ;всего
  60  802C
  61  802C ED 5F        	ld a,r
  62  802E 32 3E 85     	ld (seed+1),a ;элемент случайности
  63  8031
  64  8031              radio_main
  65  8031              ;основной цикл
  66  8031              	; OS_GET_CHAR
  67  8031              	; cp "r"
  68  8031              	; jp z,start_radio ;всё сначала
  69  8031              	; cp "R"
  70  8031              	; jp z,start_radio ;всё сначала
  71  8031
  72  8031              	; call radio_open_site ;открыть сайт
  73  8031
  74  8031              	; jr nc,radio_main_open_ok
  75  8031              	; call radio_main_error
  76  8031              	; jr radio_main
  77  8031
  78  8031              radio_main_open_ok
  79  8031              ;открыли нормально
  80  8031              	OS_GET_CHAR
  80  8031 0E 10       >    ld c,#10
  80  8033 E7          >    rst #20
  81  8034 FE 72        	cp "r"
  82  8036 CA 00 80     	jp z,start_radio ;всё сначала
  83  8039 FE 52        	cp "R"
  84  803B CA 00 80     	jp z,start_radio ;всё сначала
  85  803E FE 18        	cp 24 ;break
  86  8040 CA 1E 81     	jp z,exit
  87  8043
  88  8043
  89  8043 CD 5E 82     	call radio_request_info ;запрос информации
  90  8046
  91  8046 30 05        	jr nc,radio_request_info_ok
  92  8048 CD 1B 82     	call radio_main_error
  93  804B 18 E4        	jr radio_main_open_ok
  94  804D
  95  804D
  96  804D
  97  804D
  98  804D              radio_request_info_ok
  99  804D              ;запрос прошёл
 100  804D              	OS_GET_CHAR
 100  804D 0E 10       >    ld c,#10
 100  804F E7          >    rst #20
 101  8050 FE 72        	cp "r"
 102  8052 CA 00 80     	jp z,start_radio ;всё сначала
 103  8055 FE 52        	cp "R"
 104  8057 CA 00 80     	jp z,start_radio ;всё сначала
 105  805A FE 18        	cp 24 ;break
 106  805C CA 1E 81     	jp z,exit
 107  805F
 108  805F CD 84 82     	call radio_download_info ;загрузка информации
 109  8062
 110  8062 30 05        	jr nc,radio_download_info_ok
 111  8064 CD 1B 82     	call radio_main_error
 112  8067 18 C8        	jr radio_main_open_ok
 113  8069
 114  8069
 115  8069
 116  8069
 117  8069              radio_download_info_ok
 118  8069              ;загрузка инфы прошла
 119  8069
 120  8069
 121  8069
 122  8069              ;теперь выбранный трек
 123  8069
 124  8069              	OS_GET_CHAR
 124  8069 0E 10       >    ld c,#10
 124  806B E7          >    rst #20
 125  806C FE 72        	cp "r"
 126  806E CA 00 80     	jp z,start_radio ;всё сначала
 127  8071 FE 52        	cp "R"
 128  8073 CA 00 80     	jp z,start_radio ;всё сначала
 129  8076 FE 18        	cp 24 ;break
 130  8078 CA 1E 81     	jp z,exit
 131  807B
 132  807B CD 40 83     	call radio_request_track ;запрос трека
 133  807E
 134  807E 30 05        	jr nc,radio_request_track_ok
 135  8080 CD 1B 82     	call radio_main_error
 136  8083 18 E4        	jr radio_download_info_ok
 137  8085
 138  8085              radio_request_track_ok
 139  8085              ;загрузка инфы о треке прошла
 140  8085              	OS_GET_CHAR
 140  8085 0E 10       >    ld c,#10
 140  8087 E7          >    rst #20
 141  8088 FE 72        	cp "r"
 142  808A CA 00 80     	jp z,start_radio ;всё сначала
 143  808D FE 52        	cp "R"
 144  808F CA 00 80     	jp z,start_radio ;всё сначала
 145  8092 FE 18        	cp 24 ;break
 146  8094 CA 1E 81     	jp z,exit
 147  8097
 148  8097 CD 66 83     	call radio_download_track ;загрузка трека
 149  809A
 150  809A 30 05        	jr nc,radio_download_track_ok
 151  809C CD 1B 82     	call radio_main_error
 152  809F 18 C8        	jr radio_download_info_ok
 153  80A1
 154  80A1              radio_download_track_ok
 155  80A1
 156  80A1
 157  80A1              	;начать игру
 158  80A1 22 25 89     	ld (start_track),hl
 159  80A4              	;ld hl, outputBuffer  :
 160  80A4              	OS_GET_VTPL_SETUP
 160  80A4 0E 18       >    ld c,#18
 160  80A6 E7          >    rst #20
 161  80A7 3A 3B 89     	ld a,(player_setup)
 162  80AA 77           	ld (hl),a ;настройки
 163  80AB
 164  80AB 2A 25 89     	ld hl,(start_track)
 165  80AE              	OS_VTPL_INIT
 165  80AE 0E 15       >    ld c,#15
 165  80B0 E7          >    rst #20
 166  80B1              	OS_VTPL_PLAY
 166  80B1 0E 16       >    ld c,#16
 166  80B3 E7          >    rst #20
 167  80B4
 168  80B4 21 59 88     	ld hl,msg_play_track
 169  80B7              	OS_PRINTZ
 169  80B7 0E 09       >    ld c,#09
 169  80B9 E7          >    rst #20
 170  80BA CD 0D 84     	call print_sys_info ;печать менюшки
 171  80BD
 172  80BD
 173  80BD              loop_radio
 174  80BD              	OS_WAIT
 174  80BD DF          >	rst #18
 175  80BE              	OS_GET_CHAR
 175  80BE 0E 10       >    ld c,#10
 175  80C0 E7          >    rst #20
 176  80C1 FE 72        	cp "r"
 177  80C3 CA 12 81     	jp z,restart ;всё сначала
 178  80C6 FE 52        	cp "R"
 179  80C8 CA 12 81     	jp z,restart ;всё сначала
 180  80CB FE 73        	cp "s" ;останов
 181  80CD CA 07 81     	jp z,stopKey
 182  80D0 FE 53        	cp "S" ;останов
 183  80D2 CA 07 81     	jp z,stopKey
 184  80D5              	; cp "n" ;следующий случайный
 185  80D5              	; jp z, next_track
 186  80D5 FE 20        	cp " " ;слудующий случайный
 187  80D7 CA 22 81     	jp z, next_track
 188  80DA FE 31        	cp "1" ;формат
 189  80DC CA 3C 81     	jp z, select_pt2
 190  80DF FE 32        	cp "2" ;формат
 191  80E1 CA 55 81     	jp z, select_pt3
 192  80E4              	; cp "3" ;формат
 193  80E4              	; jp z, select_ts
 194  80E4              	; cp "4" ;формат
 195  80E4              	; jp z, select_tfc
 196  80E4 FE 51        	cp "Q" ;порядок
 197  80E6 CA D4 81     	jp z, select_order
 198  80E9 FE 71        	cp "q" ;порядок
 199  80EB CA D4 81     	jp z, select_order
 200  80EE FE 44        	cp "D" ;сохранить в файл
 201  80F0 CA C0 85     	jp z, save_file
 202  80F3 FE 64        	cp "d" ;сохранить в файл
 203  80F5 CA C0 85     	jp z, save_file
 204  80F8 FE 18        	cp 24 ;break
 205  80FA CA 1E 81     	jp z,exit
 206  80FD              	OS_GET_VTPL_SETUP
 206  80FD 0E 18       >    ld c,#18
 206  80FF E7          >    rst #20
 207  8100 7E               ld a, (hl)
 207  8101
 208  8101 17           	rla
 208  8102 30 B9          jr nc, loop_radio
 209  8104 C3 22 81     	jp next_track
 210  8107              stopKey
 211  8107              	OS_VTPL_MUTE
 211  8107 0E 17       >    ld c,#17
 211  8109 E7          >    rst #20
 212  810A 21 68 88     	ld hl,msg_stop
 213  810D              	OS_PRINTZ
 213  810D 0E 09       >    ld c,#09
 213  810F E7          >    rst #20
 214  8110 18 AB        	jr loop_radio
 215  8112              ; loop_radio2
 216  8112              	; jr loop_radio2
 217  8112
 218  8112              restart
 219  8112              	OS_VTPL_MUTE
 219  8112 0E 17       >    ld c,#17
 219  8114 E7          >    rst #20
 220  8115 21 6E 88     	ld hl,msg_restart
 221  8118              	OS_PRINTZ
 221  8118 0E 09       >    ld c,#09
 221  811A E7          >    rst #20
 222  811B C3 06 80     	jp start_radio_warm
 223  811E
 224  811E              exit ;выход в ДОС
 225  811E AF           	xor a
 226  811F              	OS_PROC_CLOSE
 226  811F 0E 13       >    ld c,#13
 226  8121 E7          >    rst #20
 227  8122
 228  8122
 229  8122              ;следующий трек
 230  8122              next_track
 231  8122              	;получить случайный номер трека
 232  8122              	; nop
 233  8122              	; nop
 234  8122              	OS_VTPL_MUTE
 234  8122 0E 17       >    ld c,#17
 234  8124 E7          >    rst #20
 235  8125
 236  8125 CD 82 81     	call get_next ;узнать следующий
 237  8128 DA 07 81     	jp c,stopKey ;если 0, то останов
 238  812B              	;подставить номер
 239  812B CD 61 85     	call toDecimal
 240  812E              	;ld (start_track),hl
 241  812E 21 BA 85     	ld hl,decimalS
 242  8131 11 6B 89     	ld de,start_request
 243  8134 01 05 00     	ld bc,5
 244  8137 ED B0        	ldir
 245  8139 C3 31 80     	jp radio_main ;на загрузку нового трека
 246  813C
 247  813C              select_pt2 ;выбор типа
 248  813C              	OS_VTPL_MUTE
 248  813C 0E 17       >    ld c,#17
 248  813E E7          >    rst #20
 249  813F 21 29 89     	ld hl,format_pt2
 250  8142 CD 71 81     	call select_format_print
 251  8145 11 86 89     	ld de,request_format
 252  8148 01 03 00     	ld bc,3
 253  814B ED B0        	ldir
 254  814D              	;настроить плеер
 255  814D 3E 03        	ld a,%00000011 ;pt2
 256  814F 32 3B 89     	ld (player_setup),a
 257  8152 C3 16 80     	jp start_radio_warm2
 258  8155
 259  8155              select_pt3 ;выбор типа
 260  8155              	OS_VTPL_MUTE
 260  8155 0E 17       >    ld c,#17
 260  8157 E7          >    rst #20
 261  8158 21 2D 89     	ld hl,format_pt3
 262  815B CD 71 81     	call select_format_print
 263  815E 11 86 89     	ld de,request_format
 264  8161 01 03 00     	ld bc,3
 265  8164 ED B0        	ldir
 266  8166              	;настроить плеер
 267  8166 3E 21        	ld a,%00100001 ;pt3
 268  8168 32 3B 89     	ld (player_setup),a
 269  816B CD 84 82     	call radio_download_info ;загрузка информации сколько треков
 270  816E C3 16 80     	jp start_radio_warm2
 271  8171
 272  8171              ; select_ts ;выбор типа
 273  8171              	; OS_VTPL_MUTE
 274  8171              	; ld hl,format_ts
 275  8171              	; call select_format_print
 276  8171              	; ld de,request_format
 277  8171              	; ld bc,3
 278  8171              	; ldir
 279  8171              	; OS_GET_VTPL_SETUP ;настроить плеер
 280  8171              	; ld a,%00100001 ;%00010001 ;2xPT3
 281  8171              	; ld (hl),a
 282  8171              	; jp loop_radio
 283  8171
 284  8171              ; select_tfc ;выбор типа
 285  8171              	; OS_VTPL_MUTE
 286  8171              	; ld hl,format_tfc
 287  8171              	; call select_format_print
 288  8171              	; ld de,request_format
 289  8171              	; ld bc,3
 290  8171              	; ldir
 291  8171              	; jp loop_radio
 292  8171
 293  8171              select_format_print
 294  8171 E5           	push hl
 295  8172 21 08 88     	ld hl,msg_format
 296  8175              	OS_PRINTZ
 296  8175 0E 09       >    ld c,#09
 296  8177 E7          >    rst #20
 297  8178 E1           	pop hl
 298  8179 E5           	push hl
 299  817A              	OS_PRINTZ
 299  817A 0E 09       >    ld c,#09
 299  817C E7          >    rst #20
 300  817D 3E 0D        	ld a,13
 301  817F              	OS_PRINT_CHARF
 301  817F D7          >	rst #10
 302  8180 E1           	pop hl
 303  8181 C9           	ret
 304  8182
 305  8182
 306  8182
 307  8182
 308  8182
 309  8182
 310  8182
 311  8182
 312  8182              get_next ;выбор следующего трека
 313  8182 2A 23 89     	ld hl,(total_track)
 314  8185 7D           	ld a,l
 315  8186 B4           	or h
 316  8187 37           	scf ;ошибка
 317  8188 C8           	ret z ;если всего 0, то вернуть 0
 318  8189 3A 39 89     	ld a,(order_val)
 319  818C B7           	or a
 320  818D 28 3A        	jr z,get_next_random
 321  818F FE 01        	cp 1
 322  8191 28 1A        	jr z,get_next_from_new_to_old
 323  8193
 324  8193
 325  8193              get_next_from_old_to_new
 326  8193              	;от старых к новым
 327  8193 2A 27 89     	ld hl,(cur_track)
 328  8196 11 01 00     	ld de,1
 329  8199 A7           	and a
 330  819A ED 52        	sbc hl,de
 331  819C 30 06        	jr nc,get_next_from_old_to_new1
 332  819E 2A 23 89     	ld hl,(total_track) ;с конца
 333  81A1 2B           	dec hl ;фикс потому что счёт с 0
 334  81A2 18 04        	jr get_next_from_old_to_new2
 335  81A4              get_next_from_old_to_new1
 336  81A4 2A 27 89     	ld hl,(cur_track)
 337  81A7 2B           	dec hl
 338  81A8              get_next_from_old_to_new2
 339  81A8 22 27 89     	ld (cur_track),hl ;запомним
 340  81AB AF           	xor a ;нет ошибок
 341  81AC C9           	ret
 342  81AD
 343  81AD
 344  81AD              get_next_from_new_to_old
 345  81AD              	;от новых к старым
 346  81AD ED 5B 27 89  	ld de,(cur_track)
 347  81B1 13           	inc de
 348  81B2 2A 23 89     	ld hl,(total_track)
 349  81B5 2B           	dec hl ;фикс потому что счёт с 0
 350  81B6 A7           	and a
 351  81B7 ED 52        	sbc hl,de
 352  81B9 30 05        	jr nc,get_next_from_new_to_old1
 353  81BB 21 00 00     	ld hl,0 ;сначала
 354  81BE 18 04        	jr get_next_from_new_to_old2
 355  81C0              get_next_from_new_to_old1
 356  81C0 2A 27 89     	ld hl,(cur_track)
 357  81C3 23           	inc hl
 358  81C4              get_next_from_new_to_old2
 359  81C4 22 27 89     	ld (cur_track),hl ;запомним
 360  81C7 AF           	xor a ;нет ошибок
 361  81C8 C9           	ret
 362  81C9
 363  81C9
 364  81C9
 365  81C9              get_next_random
 366  81C9              	;случайный
 367  81C9 2A 23 89     	ld hl,(total_track)
 368  81CC CD 10 85     	call rnd
 369  81CF 22 27 89     	ld (cur_track),hl ;запомним
 370  81D2 AF           	xor a ;нет ошибок
 371  81D3 C9           	ret
 372  81D4
 373  81D4
 374  81D4
 375  81D4
 376  81D4              select_order ;выбор порядка
 377  81D4 3A 39 89     	ld a,(order_val)
 378  81D7 3C           	inc a
 379  81D8 FE 03        	cp 3 ;макс
 380  81DA 38 01        	jr c,select_order1
 381  81DC AF           	xor a
 382  81DD              select_order1
 383  81DD 32 39 89     	ld (order_val),a
 384  81E0 CD E6 81     	call print_order
 385  81E3 C3 BD 80     	jp loop_radio
 386  81E6
 387  81E6              print_order ;печать порядка
 388  81E6 21 D1 88     	ld hl,msg_order
 389  81E9              	OS_PRINTZ
 389  81E9 0E 09       >    ld c,#09
 389  81EB E7          >    rst #20
 390  81EC
 391  81EC 3E 05        	ld a,5;цвет
 392  81EE 06 0C        	ld b,#c
 393  81F0              	OS_SET_COLOR
 393  81F0 0E 06       >    ld c,#06
 393  81F2 E7          >    rst #20
 394  81F3
 395  81F3 3A 39 89     	ld a,(order_val)
 396  81F6 B7           	or a
 397  81F7 20 08        	jr nz,select_order_from_new
 398  81F9 21 EF 88     	ld hl,msg_order_random
 399  81FC              	OS_PRINTZ
 399  81FC 0E 09       >    ld c,#09
 399  81FE E7          >    rst #20
 400  81FF 18 12        	jr select_order_ex
 401  8201              select_order_from_new
 402  8201 FE 01        	cp 1
 403  8203 20 08        	jr nz,select_order_from_old
 404  8205 21 F7 88     	ld hl,msg_order_from_new
 405  8208              	OS_PRINTZ
 405  8208 0E 09       >    ld c,#09
 405  820A E7          >    rst #20
 406  820B 18 06        	jr select_order_ex
 407  820D              select_order_from_old
 408  820D 21 08 89     	ld hl,msg_order_from_old
 409  8210              	OS_PRINTZ
 409  8210 0E 09       >    ld c,#09
 409  8212 E7          >    rst #20
 410  8213              select_order_ex
 411  8213 3E 07        	ld a,7 ;цвет
 412  8215 06 0C        	ld b,#c
 413  8217              	OS_SET_COLOR
 413  8217 0E 06       >    ld c,#06
 413  8219 E7          >    rst #20
 414  821A C9           	ret
 415  821B
 416  821B
 417  821B
 418  821B              radio_main_error ;печать ошибка
 419  821B              	;какая-то ошибка
 420  821B 3E 02        	ld a,2 ;цвет
 421  821D 06 0C        	ld b,#c
 422  821F              	OS_SET_COLOR
 422  821F 0E 06       >    ld c,#06
 422  8221 E7          >    rst #20
 423  8222 21 01 88     	ld hl,msg_error
 424  8225              	OS_PRINTZ
 424  8225 0E 09       >    ld c,#09
 424  8227 E7          >    rst #20
 425  8228 3E 07        	ld a,7 ;цвет
 426  822A 06 0C        	ld b,#c
 427  822C              	OS_SET_COLOR
 427  822C 0E 06       >    ld c,#06
 427  822E E7          >    rst #20
 428  822F CD A2 84     	call delay ;задержка
 429  8232 C9           	ret
 430  8233
 431  8233              radio_open_site ;открыть сайт
 432  8233              	OS_ESP_CLOSE ;на всякий случай сначала закрыть
 432  8233 0E 0C       >    ld c,#0c
 432  8235 E7          >    rst #20
 433  8236 21 FA 87     	ld hl,msg_open ;печать инфы
 434  8239              	OS_PRINTZ
 434  8239 0E 09       >    ld c,#09
 434  823B E7          >    rst #20
 435  823C 21 75 87     	ld hl,site_name
 436  823F              	OS_PRINTZ
 436  823F 0E 09       >    ld c,#09
 436  8241 E7          >    rst #20
 437  8242 3E 0D        	ld a,13 ;новая строка
 438  8244              	OS_PRINT_CHARF
 438  8244 D7          >	rst #10
 439  8245 21 75 87     	ld hl,site_name ;сайт
 440  8248 11 7E 87     	ld de,port_number
 441  824B              	;call Wifi.openTCP ;открыть сайт
 442  824B AF           	xor a ;открыть TCP
 443  824C              	OS_ESP_OPEN
 443  824C 0E 0D       >    ld c,#0d
 443  824E E7          >    rst #20
 444  824F D8           	ret c ;сразу не удалось (может, очередь)
 445  8250              	;или подождём открытия
 446  8250 06 96        	ld b,wait_count ;
 447  8252              radio_open_site_wait
 448  8252              	OS_WAIT
 448  8252 DF          >	rst #18
 449  8253 DD 7E 02     	ld a,(ix+2) ;флаг
 450  8256 07           	rlca
 451  8257 D8           	ret c ;если ошибка (=255)
 452  8258 B7           	or a ;если флаг !=0
 453  8259 C0           	ret nz
 454  825A 10 F6        	djnz radio_open_site_wait
 455  825C 37           	scf ;ощибка
 456  825D C9           	ret
 457  825E
 458  825E
 459  825E
 460  825E
 461  825E
 462  825E              radio_request_info ;запрос инфы
 463  825E CD 33 82     	call radio_open_site ;открыть сайт
 464  8261 D8           	ret c
 465  8262
 466  8262 21 23 88     	ld hl,msg_request_info ;
 467  8265              	OS_PRINTZ
 467  8265 0E 09       >    ld c,#09
 467  8267 E7          >    rst #20
 468  8268 11 45 89     	ld de,requestbuffer
 469  826B CD C5 84     	call strLen ;узнать длину
 470  826E EB           	ex de,hl
 471  826F 21 45 89     	ld hl,requestbuffer
 472  8272              	;call Wifi.tcpSendZ ;послать запрос
 473  8272              	OS_ESP_SEND
 473  8272 0E 0E       >    ld c,#0e
 473  8274 E7          >    rst #20
 474  8275 D8           	ret c;сразу не удалось (может, очередь)
 475  8276              	;ждём когда запрос пройдёт
 476  8276 06 96        	ld b,wait_count ;
 477  8278              radio_request_info_wait2
 478  8278              	OS_WAIT
 478  8278 DF          >	rst #18
 479  8279 DD 7E 04     	ld a,(ix+4) ;флаг
 480  827C 07           	rlca
 481  827D D8           	ret c ;если ошибка (=255)
 482  827E B7           	or a
 483  827F C0           	ret nz
 484  8280 10 F6        	djnz radio_request_info_wait2
 485  8282 37           	scf ;ощибка
 486  8283 C9           	ret
 487  8284
 488  8284
 489  8284              radio_download_info ;загрузить инфо
 490  8284
 491  8284 21 11 88     	ld hl,msg_download_info ;
 492  8287              	OS_PRINTZ
 492  8287 0E 09       >    ld c,#09
 492  8289 E7          >    rst #20
 493  828A
 494  828A CD 02 85     	call clear_outputBuffer ;очистить
 495  828D
 496  828D 21 94 8B     	ld hl,outputBuffer ;буфер для загрузки
 497  8290 22 6E 87     	ld (buffer_pointer),hl
 498  8293              	;call Wifi.getPacket ;получить ответ
 499  8293              	OS_ESP_GET
 499  8293 0E 0F       >    ld c,#0f
 499  8295 E7          >    rst #20
 500  8296 D8           	ret c ;сразу не удалось (может, очередь)
 501  8297 06 96        	ld b,wait_count ;
 502  8299              radio_download_info_wait1
 503  8299              	OS_WAIT
 503  8299 DF          >	rst #18
 504  829A DD 7E 06     	ld a,(ix+6) ;флаг результат приёма
 505  829D 07           	rlca
 506  829E D8           	ret c ;если ошибка (=255)
 507  829F B7           	or a
 508  82A0 20 04        	jr nz,radio_download_info_wait1_skip
 509  82A2 10 F5        	djnz radio_download_info_wait1
 510  82A4 37           	scf ;ощибка
 511  82A5 C9           	ret
 512  82A6
 513  82A6              radio_download_info_wait1_skip
 514  82A6              	;подготовка к приёму дальше
 515  82A6 2A 6E 87     	ld hl,(buffer_pointer)
 516  82A9 DD 4E 09     	ld c,(ix+9) ; длина принятого
 517  82AC DD 46 0A     	ld b,(ix+10)
 518  82AF 09           	add hl,bc
 519  82B0 22 6E 87     	ld (buffer_pointer),hl ;продолжить загружать с этого места
 520  82B3
 521  82B3              	;попробуем найти начало данных
 522  82B3 11 81 87     	ld de,Content_Length ;найти запись о длине данных
 523  82B6 CD E8 84     	call search_str
 524  82B9 D8           	ret c
 525  82BA
 526  82BA EB           	ex de,hl
 527  82BB CD CF 84     	call text_to_digit ;преобразовать в число
 528  82BE 22 6C 87     	ld (data_length),hl ;длина данных
 529  82C1
 530  82C1 11 70 87     	ld de,rnrn ;найти конец заголовка
 531  82C4 CD E8 84     	call search_str
 532  82C7 D8           	ret c
 533  82C8 22 68 87     	ld (data_start),hl ;начало данных
 534  82CB
 535  82CB ED 5B 6C 87  	ld de,(data_length)
 536  82CF 19           	add hl,de ;узнали ожидаемый конец данных
 537  82D0 22 6A 87     	ld (data_end),hl
 538  82D3
 539  82D3              ;загрузка остальных частей, если есть
 540  82D3              radio_download_info1
 541  82D3 DD 7E 02     	ld a,(ix+2) ;!!! closed
 542  82D6 B7           	or a
 543  82D7 28 35        	jr z,radio_download_info1_skip ;если закрыто, больше не грузим
 544  82D9
 545  82D9 2A 6E 87     	ld hl,(buffer_pointer)
 546  82DC ED 5B 6A 87  	ld de,(data_end)
 547  82E0 A7           	and a
 548  82E1 ED 52        	sbc hl,de
 549  82E3 28 29        	jr z,radio_download_info1_skip ;если уже всё загружено
 550  82E5
 551  82E5
 552  82E5              	;ещё не всё
 553  82E5 2A 6E 87     	ld hl,(buffer_pointer)
 554  82E8 7C           	ld a,h
 555  82E9 FE F4        	cp buffer_top ;ограничение
 556  82EB 30 21        	jr nc,radio_download_info1_skip
 557  82ED
 558  82ED              	;call Wifi.getPacket
 559  82ED              	OS_ESP_GET
 559  82ED 0E 0F       >    ld c,#0f
 559  82EF E7          >    rst #20
 560  82F0 06 96        	ld b,wait_count ;
 561  82F2              radio_download_info_wait2
 562  82F2              	OS_WAIT
 562  82F2 DF          >	rst #18
 563  82F3 DD 7E 06     	ld a,(ix+6) ;флаг результат приёма
 564  82F6 07           	rlca
 565  82F7 D8           	ret c ;если ошибка (=255)
 566  82F8 B7           	or a
 567  82F9 20 04        	jr nz,radio_download_info_wait2_skip
 568  82FB 10 F5        	djnz radio_download_info_wait2
 569  82FD 37           	scf
 570  82FE C9           	ret
 571  82FF
 572  82FF              radio_download_info_wait2_skip
 573  82FF 2A 6E 87     	ld hl,(buffer_pointer)
 574  8302 DD 4E 09     	ld c,(ix+9) ; длина принятого
 575  8305 DD 46 0A     	ld b,(ix+10)
 576  8308 09           	add hl,bc
 577  8309 22 6E 87     	ld (buffer_pointer),hl ;продолжить загружать с этого места
 578  830C
 579  830C 18 C5        	jr radio_download_info1 ;получить ещё части до конца
 580  830E
 581  830E              radio_download_info1_skip
 582  830E
 583  830E              	OS_ESP_CLOSE ;закрыть соединение!
 583  830E 0E 0C       >    ld c,#0c
 583  8310 E7          >    rst #20
 584  8311
 585  8311
 586  8311 11 92 87     	ld de,Content_Sucesfully ;найти запись об успешном запросе
 587  8314 CD E8 84     	call search_str
 588  8317 D8           	ret c
 589  8318
 590  8318              	; ld de,Content_Length ;найти запись о длине
 591  8318              	; call search_str
 592  8318              	; ret c
 593  8318
 594  8318              	; ex de,hl
 595  8318              	; call text_to_digit ;преобразовать в число
 596  8318
 597  8318              	; ex de,hl
 598  8318              	; ld hl,(buffer_pointer) ;
 599  8318              	; and a
 600  8318              	; sbc hl,de
 601  8318              	; ;узнали начало пакета
 602  8318
 603  8318 2A 68 87     	ld hl,(data_start)
 604  831B
 605  831B 11 D8 87     	ld de,Content_ID ;найти запись об ID файла
 606  831E CD E8 84     	call search_str
 607  8321 D8           	ret c
 608  8322
 609  8322
 610  8322              	;инфа получена
 611  8322
 612  8322 E5           	push hl
 613  8323 CD 25 84     	call print_info_track ;инфо
 614  8326 3E 0D        	ld a,13
 615  8328              	OS_PRINT_CHARF
 615  8328 D7          >	rst #10
 616  8329 E1           	pop hl
 617  832A 11 11 8A     	ld de,requestbuffer2_file_id
 618  832D
 619  832D              ;WAITKEY	XOR A:IN A,(#FE):CPL:AND #1F:JR Z,WAITKEY
 620  832D
 621  832D CD A8 84     	call id_copy ;скопировать в запрос id трека
 622  8330
 623  8330              	;запомнить сколько всего
 624  8330 11 99 87     	ld de,Content_Total_Amount ;всего таких треков
 625  8333 CD E8 84     	call search_str
 626  8336 D8           	ret c
 627  8337 EB           	ex de,hl
 628  8338 CD CF 84     	call text_to_digit
 629  833B 22 23 89     	ld (total_track),hl
 630  833E B7           	or a
 631  833F C9           	ret
 632  8340
 633  8340
 634  8340
 635  8340
 636  8340
 637  8340
 638  8340              radio_request_track	;запрос трека
 639  8340 CD 33 82     	call radio_open_site ;открыть сайт
 640  8343 D8           	ret c
 641  8344
 642  8344 21 34 88     	ld hl,msg_request_track
 643  8347              	OS_PRINTZ
 643  8347 0E 09       >    ld c,#09
 643  8349 E7          >    rst #20
 644  834A
 645  834A              	;ld hl,requestbuffer2_title
 646  834A              	;OS_PRINTZ
 647  834A 11 04 8A     	ld de,requestbuffer2
 648  834D CD C5 84     	call strLen ;узнать длину
 649  8350 EB           	ex de,hl
 650  8351 21 04 8A     	ld hl,requestbuffer2
 651  8354              	OS_ESP_SEND
 651  8354 0E 0E       >    ld c,#0e
 651  8356 E7          >    rst #20
 652  8357 D8           	ret c ;сразу не удалось (может, очередь)
 653  8358              	;ждём когда запрос пройдёт
 654  8358 06 96        	ld b,wait_count ;
 655  835A              radio_request_track_wait2
 656  835A              	OS_WAIT
 656  835A DF          >	rst #18
 657  835B DD 7E 04     	ld a,(ix+4) ;флаг
 658  835E 07           	rlca
 659  835F D8           	ret c ;если ошибка (=255)
 660  8360 B7           	or a
 661  8361 C0           	ret nz
 662  8362 10 F6        	djnz radio_request_track_wait2
 663  8364 37           	scf
 664  8365 C9           	ret
 665  8366
 666  8366
 667  8366
 668  8366
 669  8366              radio_download_track ;загрузить трек
 670  8366 21 46 88     	ld hl,msg_download_track
 671  8369              	OS_PRINTZ
 671  8369 0E 09       >    ld c,#09
 671  836B E7          >    rst #20
 672  836C
 673  836C CD 02 85     	call clear_outputBuffer ;очистить
 674  836F
 675  836F 21 94 8B     	ld hl,outputBuffer ;буфер для загрузки
 676  8372 22 6E 87     	ld (buffer_pointer),hl
 677  8375              	;call Wifi.getPacket ;получить ответ
 678  8375              	OS_ESP_GET
 678  8375 0E 0F       >    ld c,#0f
 678  8377 E7          >    rst #20
 679  8378 D8           	ret c ;сразу не удалось (может, очередь)
 680  8379 06 96        	ld b,wait_count ;
 681  837B              radio_download_track_wait1
 682  837B              	OS_WAIT
 682  837B DF          >	rst #18
 683  837C DD 7E 06     	ld a,(ix+6) ;флаг результат приёма
 684  837F 07           	rlca
 685  8380 D8           	ret c ;если ошибка (=255)
 686  8381 B7           	or a
 687  8382 20 04        	jr nz,radio_download_track_wait1_skip
 688  8384 10 F5        	djnz radio_download_track_wait1
 689  8386 37           	scf
 690  8387 C9           	ret
 691  8388
 692  8388              radio_download_track_wait1_skip
 693  8388              	;подготовка к приёму дальше
 694  8388 2A 6E 87     	ld hl,(buffer_pointer)
 695  838B DD 4E 09     	ld c,(ix+9) ; длина принятого
 696  838E DD 46 0A     	ld b,(ix+10)
 697  8391 09           	add hl,bc
 698  8392 22 6E 87     	ld (buffer_pointer),hl ;продолжить загружать с этого места
 699  8395
 700  8395              	;попробуем найти начало данных
 701  8395 11 81 87     	ld de,Content_Length ;найти запись о длине данных
 702  8398 CD E8 84     	call search_str
 703  839B D8           	ret c
 704  839C
 705  839C EB           	ex de,hl
 706  839D CD CF 84     	call text_to_digit ;преобразовать в число
 707  83A0 22 6C 87     	ld (data_length),hl ;длина данных
 708  83A3
 709  83A3 11 70 87     	ld de,rnrn ;найти конец заголовка
 710  83A6 CD E8 84     	call search_str
 711  83A9 D8           	ret c
 712  83AA 22 68 87     	ld (data_start),hl ;начало данных
 713  83AD
 714  83AD ED 5B 6C 87  	ld de,(data_length)
 715  83B1 19           	add hl,de ;узнали ожидаемый конец данных
 716  83B2 22 6A 87     	ld (data_end),hl
 717  83B5
 718  83B5              	;загрузка остатка
 719  83B5              radio_download_track1
 720  83B5
 721  83B5 DD 7E 02     	ld a,(ix+2) ;!!! closed
 722  83B8 B7           	or a
 723  83B9 28 35        	jr z,radio_download_track1_skip ;если закрыто, больше не грузим
 724  83BB
 725  83BB 2A 6E 87     	ld hl,(buffer_pointer)
 726  83BE ED 5B 6A 87  	ld de,(data_end)
 727  83C2 A7           	and a
 728  83C3 ED 52        	sbc hl,de
 729  83C5 28 29        	jr z,radio_download_track1_skip ;если уже всё загружено
 730  83C7
 731  83C7
 732  83C7              	;ещё не всё
 733  83C7 2A 6E 87     	ld hl,(buffer_pointer)
 734  83CA 7C           	ld a,h
 735  83CB FE F4        	cp buffer_top ;ограничение
 736  83CD 30 21        	jr nc,radio_download_track1_skip
 737  83CF
 738  83CF              	;call Wifi.getPacket
 739  83CF              	OS_ESP_GET
 739  83CF 0E 0F       >    ld c,#0f
 739  83D1 E7          >    rst #20
 740  83D2 06 96        	ld b,wait_count ;
 741  83D4              radio_download_track_wait2
 742  83D4              	OS_WAIT
 742  83D4 DF          >	rst #18
 743  83D5 DD 7E 06     	ld a,(ix+6) ;флаг результат приёма
 744  83D8 07           	rlca
 745  83D9 D8           	ret c ;если ошибка (=255)
 746  83DA B7           	or a
 747  83DB 20 04        	jr nz,radio_download_track_wait2_skip
 748  83DD 10 F5        	djnz radio_download_track_wait2
 749  83DF 37           	scf
 750  83E0 C9           	ret
 751  83E1
 752  83E1              radio_download_track_wait2_skip
 753  83E1 2A 6E 87     	ld hl,(buffer_pointer)
 754  83E4 DD 4E 09     	ld c,(ix+9) ; длина принятого
 755  83E7 DD 46 0A     	ld b,(ix+10)
 756  83EA 09           	add hl,bc
 757  83EB 22 6E 87     	ld (buffer_pointer),hl ;продолжить загружать с этого места
 758  83EE
 759  83EE 18 C5        	jr radio_download_track1 ;получить ещё части до конца
 760  83F0
 761  83F0              radio_download_track1_skip
 762  83F0              	OS_ESP_CLOSE ;закрыть!
 762  83F0 0E 0C       >    ld c,#0c
 762  83F2 E7          >    rst #20
 763  83F3
 764  83F3
 765  83F3              	; ;определить длину
 766  83F3              	; ld de,Content_Length ;найти запись о длине
 767  83F3              	; call search_str
 768  83F3              	; ret c
 769  83F3              	; ex de,hl
 770  83F3              	; call text_to_digit ;преобразовать в число
 771  83F3
 772  83F3              	; ex de,hl
 773  83F3              	; ld hl,(buffer_pointer) ;
 774  83F3              	; and a
 775  83F3              	; sbc hl,de
 776  83F3              	; ;узнали начало пакета
 777  83F3 21 19 89     	ld hl,msg_download_size ;печать размера
 778  83F6              	OS_PRINTZ
 778  83F6 0E 09       >    ld c,#09
 778  83F8 E7          >    rst #20
 779  83F9 2A 6C 87     	ld hl,(data_length)
 780  83FC CD 61 85     	call toDecimal
 781  83FF              	OS_PRINTZ
 781  83FF 0E 09       >    ld c,#09
 781  8401 E7          >    rst #20
 782  8402 21 20 89     	ld hl,msg_B
 783  8405              	OS_PRINTZ
 783  8405 0E 09       >    ld c,#09
 783  8407 E7          >    rst #20
 784  8408
 785  8408 2A 68 87     	ld hl,(data_start) ;начало данных
 786  840B B7           	or a
 787  840C C9           	ret
 788  840D
 789  840D
 790  840D
 791  840D
 792  840D
 793  840D
 794  840D              print_sys_info ;печать меню управления
 795  840D 3E 47        	ld a,7+64 ;цвет
 796  840F 06 0C        	ld b,#c
 797  8411              	OS_SET_COLOR
 797  8411 0E 06       >    ld c,#06
 797  8413 E7          >    rst #20
 798  8414 21 7A 88     	ld hl,msg_sys_info
 799  8417              	OS_PRINTZ
 799  8417 0E 09       >    ld c,#09
 799  8419 E7          >    rst #20
 800  841A
 801  841A CD E6 81     	call print_order
 802  841D
 803  841D 3E 07        	ld a,7 ;цвет
 804  841F 06 0C        	ld b,#c
 805  8421              	OS_SET_COLOR
 805  8421 0E 06       >    ld c,#06
 805  8423 E7          >    rst #20
 806  8424 C9           	ret
 807  8425
 808  8425
 809  8425              print_info_track ;печать инфо о треке
 810  8425 CD 11 86     	call save_file_prep_name ;запомнить имя файла
 811  8428
 812  8428 21 DD 88     	ld hl,msg_cur_number
 813  842B              	OS_PRINTZ
 813  842B 0E 09       >    ld c,#09
 813  842D E7          >    rst #20
 814  842E 2A 27 89     	ld hl,(cur_track)
 815  8431 CD 61 85     	call toDecimal
 816  8434              	OS_PRINTZ
 816  8434 0E 09       >    ld c,#09
 816  8436 E7          >    rst #20
 817  8437
 818  8437 21 99 87     	ld hl,Content_Total_Amount ;всего таких треков
 819  843A CD 83 84     	call print_info_track_one
 820  843D D8           	ret c
 821  843E
 822  843E 21 D8 87     	ld hl,Content_ID ;id трека
 823  8441 CD 83 84     	call print_info_track_one
 824  8444 D8           	ret c
 825  8445
 826  8445 21 DE 87     	ld hl,Content_Type ;формат трека
 827  8448 CD 83 84     	call print_info_track_one
 828  844B D8           	ret c
 829  844C
 830  844C 3E 04        	ld a,4 ;цвет
 831  844E 06 0C        	ld b,#c
 832  8450              	OS_SET_COLOR
 832  8450 0E 06       >    ld c,#06
 832  8452 E7          >    rst #20
 833  8453 21 A8 87     	ld hl,Content_Title ;название трека
 834  8456 CD 83 84     	call print_info_track_one
 835  8459 F5           	push af
 836  845A 3E 07        	ld a,7 ;цвет
 837  845C 06 0C        	ld b,#c
 838  845E              	OS_SET_COLOR
 838  845E 0E 06       >    ld c,#06
 838  8460 E7          >    rst #20
 839  8461 F1           	pop af
 840  8462 D8           	ret c
 841  8463
 842  8463 21 C8 87     	ld hl,Content_Year ;год трека
 843  8466 CD 83 84     	call print_info_track_one
 844  8469 D8           	ret c
 845  846A
 846  846A 21 D0 87     	ld hl,Content_Time ;длина трека
 847  846D CD 83 84     	call print_info_track_one
 848  8470 D8           	ret c
 849  8471
 850  8471 21 BE 87     	ld hl,Content_Rating ;рейтинг трека
 851  8474 CD 83 84     	call print_info_track_one
 852  8477 D8           	ret c
 853  8478
 854  8478 21 B1 87     	ld hl,Content_AuthorIDs ;id автора трека
 855  847B CD 83 84     	call print_info_track_one
 856  847E D8           	ret c
 857  847F
 858  847F 3E 0D        	ld a,13
 859  8481              	OS_PRINT_CHARF
 859  8481 D7          >	rst #10
 860  8482 C9           	ret
 861  8483
 862  8483
 863  8483              print_info_track_one
 864  8483 E5           	push hl
 865  8484 3E 0D        	ld a,13
 866  8486              	OS_PRINT_CHARF
 866  8486 D7          >	rst #10
 867  8487 E1           	pop hl
 868  8488 E5           	push hl
 869  8489              	OS_PRINTZ
 869  8489 0E 09       >    ld c,#09
 869  848B E7          >    rst #20
 870  848C D1           	pop de
 871  848D CD E8 84     	call search_str
 872  8490 D8           	ret c
 873  8491 CD 96 84     	call print_to_sym ;печать значения
 874  8494 B7           	or a
 875  8495 C9           	ret
 876  8496
 877  8496              print_to_sym ;печать до символа "," или 0
 878  8496 7E           	ld a,(hl)
 879  8497 FE 2C        	cp ","
 880  8499 C8           	ret z
 881  849A B7           	or a
 882  849B C8           	ret z
 883  849C E5           	push hl
 884  849D              	OS_PRINT_CHARF
 884  849D D7          >	rst #10
 885  849E E1           	pop hl
 886  849F 23           	inc hl
 887  84A0 18 F4        	jr print_to_sym
 888  84A2
 889  84A2
 890  84A2              delay ;задержка между запросами
 891  84A2 06 32        	ld b,50*1 ;
 892  84A4              delay1
 893  84A4              	OS_WAIT
 893  84A4 DF          >	rst #18
 894  84A5 10 FD        	djnz delay1
 895  84A7 C9           	ret
 896  84A8
 897  84A8              ;hl - from
 898  84A8              ;de - to
 899  84A8              id_copy ;скопировать текст id
 900  84A8 7E           	ld a,(hl)
 901  84A9 FE 30        	cp "0"
 902  84AB 38 09        	jr c,id_copy2
 903  84AD FE 3A        	cp "9"+1
 904  84AF 30 05        	jr nc,id_copy2
 905  84B1 12           	ld (de),a
 906  84B2 13           	inc de
 907  84B3 23           	inc hl
 908  84B4 18 F2        	jr id_copy
 909  84B6
 910  84B6              id_copy2
 911  84B6              	;скопировать остаток строки запроса
 912  84B6 21 11 8B     	ld hl,requestbuffer2_end
 913  84B9              id_copy3
 914  84B9 7E           	ld a,(hl)
 915  84BA B7           	or a
 916  84BB 28 05        	jr z,id_copy_ex
 917  84BD 12           	ld (de),a
 918  84BE 13           	inc de
 919  84BF 23           	inc hl
 920  84C0 18 F7        	jr id_copy3
 921  84C2              id_copy_ex
 922  84C2 AF           	xor a
 923  84C3 12           	ld (de),a  ;в конце 0
 924  84C4 C9           	ret
 925  84C5
 926  84C5              strLen: ;посчитать длину строки до 0
 927  84C5 21 00 00         ld hl, 0
 928  84C8              .loop
 929  84C8 1A               ld a, (de)
 929  84C9 A7             and a
 929  84CA C8             ret z
 930  84CB 13 23            inc de, hl
 931  84CD 18 F9            jr .loop
 932  84CF
 933  84CF              text_to_digit ;тест в цифру
 934  84CF              ;de - текст
 935  84CF              ;вых: hl - цифра
 936  84CF 21 00 00     		ld hl,0			; count lenght
 937  84D2 1A           .cil1	ld a,(de)
 938  84D3 13           		inc de
 939  84D4 FE 30        		cp "0"
 939  84D6 D8             ret c
 940  84D7 FE 3A        		cp "9"+1
 940  84D9 D0             ret nc
 941  84DA D6 30        		sub 0x30
 941  84DC 4D             ld c,l
 941  84DD 44             ld b,h
 941  84DE 29             add hl,hl
 941  84DF 29             add hl,hl
 941  84E0 09             add hl,bc
 941  84E1 29             add hl,hl
 941  84E2 4F             ld c,a
 941  84E3 06 00          ld b,0
 941  84E5 09             add hl,bc
 942  84E6 18 EA        		jr .cil1
 943  84E8
 944  84E8              ;поиск строки
 945  84E8              ;de - образец, в конце 0
 946  84E8              ;вых: hl - адрес после найденного
 947  84E8              search_str
 948  84E8 21 94 8B     	ld hl,outputBuffer
 949  84EB 42           	ld b,d
 950  84EC 4B           	ld c,e
 951  84ED              search_str2
 952  84ED 1A           	ld a,(de)
 953  84EE BE           	cp (hl)
 954  84EF 20 0A        	jr nz,search_str1
 955  84F1              	;нашли одну букву
 956  84F1              search_str3
 957  84F1 23           	inc hl
 958  84F2 13           	inc de
 959  84F3 1A           	ld a,(de)
 960  84F4 B7           	or a
 961  84F5 C8           	ret z ;нашли всю строку
 962  84F6 BE           	cp (hl)
 963  84F7 28 F8        	jr z,search_str3
 964  84F9              	;не вся строка совпала
 965  84F9 50           	ld d,b ;в начало образца
 966  84FA 59           	ld e,c
 967  84FB              search_str1
 968  84FB 23           	inc hl ;дальше
 969  84FC 24           	inc h
 970  84FD 25           	dec h
 971  84FE 20 ED        	jr nz,search_str2
 972  8500 37           	scf ;не нашли
 973  8501 C9           	ret
 974  8502
 975  8502
 976  8502              clear_outputBuffer ;почистить буфер приёма
 977  8502 21 94 8B     	ld hl,outputBuffer
 978  8505 11 95 8B     	ld de,outputBuffer+1
 979  8508 01 6A 74     	ld bc,#ffff-outputBuffer-1
 980  850B 36 00        	ld (hl),0
 981  850D ED B0        	ldir
 982  850F C9           	ret
 983  8510
 984  8510
 985  8510              ;вх: HL - диапазон
 986  8510              ;вых: HL - результат
 987  8510              rnd ;генератор случайного числа в заданном диапазоне
 988  8510 7C           	ld a,h
 989  8511 B5           	or l
 990  8512 C8           	ret z
 991  8513 AF           	xor a ;очистить переменную
 992  8514 32 3A 85     	ld (rnd_out),a
 993  8517 32 3B 85     	ld (rnd_out+1),a
 994  851A E5           	push hl
 995  851B CD 3C 85     	call random ;получить случайное
 996  851E              	;умножить диапазон на случайное число и взять старшие два байта
 997  851E C1           	pop bc ;счётчик
 998  851F EB           	ex de,hl
 999  8520 21 00 00     	ld hl,0
1000  8523              rnd_cl
1001  8523 19           	add hl,de
1002  8524 30 0B        	jr nc,rnd_cl1 ;если нет переполения
1003  8526 D9           	exx
1004  8527 ED 5B 3A 85  	ld de,(rnd_out) ;увеличить старшие байты
1005  852B 13           	inc de
1006  852C ED 53 3A 85  	ld (rnd_out),de
1007  8530 D9           	exx
1008  8531              rnd_cl1
1009  8531 0B           	dec bc
1010  8532 78           	ld a,b
1011  8533 B1           	or c
1012  8534 20 ED        	jr nz,rnd_cl
1013  8536 2A 3A 85     	ld hl,(rnd_out)
1014  8539 C9           	ret
1015  853A 00 00        rnd_out dw 0 ;ответ случайное число
1016  853C
1017  853C
1018  853C              random ;Переписанный генератор из ПЗУ бейсика
1019  853C 11 00 00     	ld	de,0
1020  853F              seed	equ	$-2
1021  853F AF           	xor	a
1022  8540 67 6F 47     	ld	h,a,l,a,b,a
1023  8543 19           	add	hl,de
1024  8544 88           	adc	a,b
1025  8545 29           	add	hl,hl
1026  8546 8F           	adc	a,a
1027  8547 29           	add	hl,hl
1028  8548 8F           	adc	a,a
1029  8549 29           	add	hl,hl
1030  854A 8F           	adc	a,a
1031  854B 19           	add	hl,de
1032  854C 88           	adc	a,b
1033  854D 29           	add	hl,hl
1034  854E 8F           	adc	a,a
1035  854F 29           	add	hl,hl
1036  8550 8F           	adc	a,a
1037  8551 19           	add	hl,de
1038  8552 88           	adc	a,b
1039  8553 29           	add	hl,hl
1040  8554 8F           	adc	a,a
1041  8555 19           	add	hl,de
1042  8556 88           	adc	a,b
1043  8557 D6 4A        	sub	#4a
1044  8559 ED 44        	neg
1045  855B 4F           	ld	c,a
1046  855C 09           	add	hl,bc
1047  855D 22 3D 85     	ld	(seed),hl
1048  8560 C9           	ret
1049  8561
1050  8561              toDecimal		;конвертирует 2 байта в 5 десятичных цифр
1051  8561              				;на входе в HL число
1052  8561 11 10 27     			ld de,10000 ;десятки тысяч
1053  8564 3E FF        			ld a,255
1054  8566              toDecimal10k
1055  8566 A7           			and a
1056  8567 ED 52        			sbc hl,de
1057  8569 3C           			inc a
1058  856A 30 FA        			jr nc,toDecimal10k
1059  856C 19           			add hl,de
1060  856D C6 30        			add a,48
1061  856F 32 BA 85     			ld (decimalS),a
1062  8572 11 E8 03     			ld de,1000 ;тысячи
1063  8575 3E FF        			ld a,255
1064  8577              toDecimal1k
1065  8577 A7           			and a
1066  8578 ED 52        			sbc hl,de
1067  857A 3C           			inc a
1068  857B 30 FA        			jr nc,toDecimal1k
1069  857D 19           			add hl,de
1070  857E C6 30        			add a,48
1071  8580 32 BB 85     			ld (decimalS+1),a
1072  8583 11 64 00     			ld de,100 ;сотни
1073  8586 3E FF        			ld a,255
1074  8588              toDecimal01k
1075  8588 A7           			and a
1076  8589 ED 52        			sbc hl,de
1077  858B 3C           			inc a
1078  858C 30 FA        			jr nc,toDecimal01k
1079  858E 19           			add hl,de
1080  858F C6 30        			add a,48
1081  8591 32 BC 85     			ld (decimalS+2),a
1082  8594 11 0A 00     			ld de,10 ;десятки
1083  8597 3E FF        			ld a,255
1084  8599              toDecimal001k
1085  8599 A7           			and a
1086  859A ED 52        			sbc hl,de
1087  859C 3C           			inc a
1088  859D 30 FA        			jr nc,toDecimal001k
1089  859F 19           			add hl,de
1090  85A0 C6 30        			add a,48
1091  85A2 32 BD 85     			ld (decimalS+3),a
1092  85A5 11 01 00     			ld de,1 ;единицы
1093  85A8 3E FF        			ld a,255
1094  85AA              toDecimal0001k
1095  85AA A7           			and a
1096  85AB ED 52        			sbc hl,de
1097  85AD 3C           			inc a
1098  85AE 30 FA        			jr nc,toDecimal0001k
1099  85B0 19           			add hl,de
1100  85B1 C6 30        			add a,48
1101  85B3 32 BE 85     			ld (decimalS+4),a
1102  85B6 21 BA 85     			ld hl,decimalS
1103  85B9 C9           			ret
1104  85BA
1105  85BA 00 00 00...  decimalS	ds 6 ;десятичные цифры
1106  85C0
1107  85C0
1108  85C0
1109  85C0              save_file ;сохранить на диск
1110  85C0 3E 04        	ld a,4;цвет
1111  85C2 06 0C        	ld b,#c
1112  85C4              	OS_SET_COLOR
1112  85C4 0E 06       >    ld c,#06
1112  85C6 E7          >    rst #20
1113  85C7
1114  85C7 21 5C 86     	ld hl,msg_save_file ;печать сообщения и имени файла
1115  85CA              	OS_PRINTZ
1115  85CA 0E 09       >    ld c,#09
1115  85CC E7          >    rst #20
1116  85CD
1117  85CD 3E 0D        	ld a,13
1118  85CF              	OS_PRINT_CHARF
1118  85CF D7          >	rst #10
1119  85D0
1120  85D0 3E 07        	ld a,7;цвет
1121  85D2 06 0C        	ld b,#c
1122  85D4              	OS_SET_COLOR
1122  85D4 0E 06       >    ld c,#06
1122  85D6 E7          >    rst #20
1123  85D7
1124  85D7 21 48 86     	ld hl,path_download ;путь для сохранений
1125  85DA AF           	xor	a
1126  85DB 3D           	dec	a ;установить текущим
1127  85DC              	OS_FIND_PATH ;найти папку
1127  85DC 0E 29       >    ld c,#29
1127  85DE E7          >    rst #20
1128  85DF
1129  85DF 3E FF        	ld a,255
1130  85E1 32 3A 89     	ld (file_id_cur),a	;"обнулить" id
1131  85E4
1132  85E4 21 68 86     	ld hl,save_file_name ;имя
1133  85E7              	OS_FILE_OPEN ;если есть, откроем
1133  85E7 0E 21       >    ld c,#21
1133  85E9 E7          >    rst #20
1134  85EA 30 05        	jr nc,save_file_open_ok
1135  85EC
1136  85EC              	OS_FILE_CREATE ;или создадим
1136  85EC 0E 22       >    ld c,#22
1136  85EE E7          >    rst #20
1137  85EF 38 1A        	jr c,save_file_ex_err
1138  85F1              save_file_open_ok
1139  85F1              	;файл открыт в A - id файла
1140  85F1 32 3A 89     	ld (file_id_cur),a
1141  85F4 2A 68 87     	ld hl,(data_start)
1142  85F7 ED 5B 6C 87  	ld de,(data_length)
1143  85FB              	OS_FILE_WRITE ;записать
1143  85FB 0E 24       >    ld c,#24
1143  85FD E7          >    rst #20
1144  85FE F5           	push af
1145  85FF 3A 3A 89     	ld a,(file_id_cur)
1146  8602              	OS_FILE_CLOSE ;закрыть
1146  8602 0E 25       >    ld c,#25
1146  8604 E7          >    rst #20
1147  8605 F1           	pop af
1148  8606 38 03        	jr c,save_file_ex_err
1149  8608
1150  8608              save_file_ex_ok
1151  8608 C3 BD 80     	jp loop_radio
1152  860B
1153  860B              save_file_ex_err
1154  860B CD 1B 82     	call radio_main_error
1155  860E C3 BD 80     	jp loop_radio
1156  8611
1157  8611
1158  8611              save_file_prep_name
1159  8611              	;найти и подготовить имя файла
1160  8611 11 E6 87     	ld de,Content_originalFileName
1161  8614 CD E8 84     	call search_str
1162  8617 38 13        	jr c,save_file_prep_name_no ;если не нашли имени
1163  8619              	;перенести до символа "
1164  8619 11 68 86     	ld de,save_file_name ;куда
1165  861C 06 FF        	ld b,save_file_name_max_lenght ;макс длина
1166  861E 0E FF        	ld c,#ff ;для цикла
1167  8620              save_file_prep_name_cl ;цикл
1168  8620 7E           	ld a,(hl)
1169  8621 FE 22        	cp '"'
1170  8623 28 04        	jr z,save_file_prep_name_ex
1171  8625 ED A0        	ldi
1172  8627 10 F7        	djnz save_file_prep_name_cl
1173  8629
1174  8629              save_file_prep_name_ex
1175  8629 AF           	xor a
1176  862A 12           	ld (de),a ;в конце 0
1177  862B C9           	ret
1178  862C
1179  862C              save_file_prep_name_no
1180  862C 11 D8 87     	ld de,Content_ID ;id трека
1181  862F CD E8 84     	call search_str
1182  8632 11 68 86     	ld de,save_file_name ;куда
1183  8635 01 05 00     	ld bc,5
1184  8638 ED B0        	ldir
1185  863A              	;теперь расширение
1186  863A 3E 2E        	ld a,'.'
1187  863C 12           	ld (de),a
1188  863D 13           	inc de
1189  863E 21 86 89     	ld hl,request_format
1190  8641 01 03 00     	ld bc,3
1191  8644 ED B0        	ldir
1192  8646 18 E1        	jr save_file_prep_name_ex
1193  8648
1194  8648
1195  8648              save_file_name_max_lenght equ 255 ;максимальная длина имени
1196  8648 5C 4F 53 5A  path_download db "\\OSZ\\Download\\Radio",0
1196  864C 5C 44 6F 77
1196  8650 6E 6C 6F 61
1196  8654 64 5C 52 61
1196  8658 64 69 6F 00
1197  865C 0D 53 61 76  msg_save_file db 13,"Save file: "
1197  8660 65 20 66 69
1197  8664 6C 65 3A 20
1198  8668              save_file_name  ;тут имя файла
1199  8668 00 00 00...  	ds save_file_name_max_lenght+1 ;буфер для имени файла
1200  8768
1201  8768
1202  8768
1203  8768
1204  8768
1205  8768
1206  8768                  ; include "drivers/utils.asm"
1207  8768                  ; include "drivers/wifi.asm"
1208  8768              	; include "drivers/zx-wifi.asm"
1209  8768
1210  8768
1211  8768              id_lenght equ 6 ;длина кода файла
1212  8768              wait_count equ 3*50 ;задержка в кадрах
1213  8768              buffer_top equ #ff-(ESP_PACKET_MAX/256);ограничение буфера сверху
1214  8768
1215  8768              ; ;ответы ESP
1216  8768              ; sendOk[] = "SEND OK";
1217  8768              ; const unsigned char gotWiFi[] = "WIFI GOT IP";
1218  8768              ; "CONNECT"
1219  8768
1220  8768              ; ;команды
1221  8768              ; ;<link ID> – ID соединения (0–4), используется при нескольких соединениях;
1222  8768              ; at_cipmux db "AT+CIPMUX=1",0 ;несколько соединений
1223  8768              ;at_cipstart db "AT+CIPSTART=1,\"TCP\",\"zxart.ee\",80",0
1224  8768              ; "AT+CIPSEND="
1225  8768              ; "AT+CIPCLOSE"
1226  8768              ;link_id db 0; номер соединения
1227  8768 00 00        data_start dw 0 ;начало данных
1228  876A 00 00        data_end dw 0 ;конец данных
1229  876C 00 00        data_length dw 0 ;длина данных
1230  876E 00 00        buffer_pointer dw 0 ;указатель на буфер
1231  8770 0D 0A 0D 0A  rnrn db 13,10,13,10,0 ;окончание заголовка
1231  8774 00
1232  8775 7A 78 61 72  site_name db "zxart.ee",0 ;имя сайта
1232  8779 74 2E 65 65
1232  877D 00
1233  877E 38 30 00     port_number db "80" ,0;
1234  8781 43 6F 6E 74  Content_Length db "Content-Length: ",0
1234  8785 65 6E 74 2D
1234  8789 4C 65 6E 67
1234  878D 74 68 3A 20
1234  8791 00
1235  8792 73 75 63 63  Content_Sucesfully db "succes",0
1235  8796 65 73 00
1236  8799 22 74 6F 74  Content_Total_Amount db "\"totalAmount\":",0
1236  879D 61 6C 41 6D
1236  87A1 6F 75 6E 74
1236  87A5 22 3A 00
1237  87A8 22 74 69 74  Content_Title db "\"title\":",0
1237  87AC 6C 65 22 3A
1237  87B0 00
1238  87B1 22 61 75 74  Content_AuthorIDs db "\"authorIds\":",0
1238  87B5 68 6F 72 49
1238  87B9 64 73 22 3A
1238  87BD 00
1239  87BE 22 72 61 74  Content_Rating db "\"rating\":",0
1239  87C2 69 6E 67 22
1239  87C6 3A 00
1240  87C8 22 79 65 61  Content_Year db "\"year\":",0
1240  87CC 72 22 3A 00
1241  87D0 22 74 69 6D  Content_Time db "\"time\":",0
1241  87D4 65 22 3A 00
1242  87D8 22 69 64 22  Content_ID db "\"id\":",0
1242  87DC 3A 00
1243  87DE 22 74 79 70  Content_Type db "\"type\":",0
1243  87E2 65 22 3A 00
1244  87E6 6F 72 69 67  Content_originalFileName db 'originalFileName":"',0
1244  87EA 69 6E 61 6C
1244  87EE 46 69 6C 65
1244  87F2 4E 61 6D 65
1244  87F6 22 3A 22 00
1245  87FA              ;file_id db "000000",0 ;id файла
1246  87FA 4F 70 65 6E  msg_open db "Open: ",0
1246  87FE 3A 20 00
1247  8801 45 72 72 6F  msg_error db "Error",13,0
1247  8805 72 0D 00
1248  8808 46 6F 72 6D  msg_format db "Format: ",0
1248  880C 61 74 3A 20
1248  8810 00
1249  8811 44 6F 77 6E  msg_download_info db "Download info...",13,0
1249  8815 6C 6F 61 64
1249  8819 20 69 6E 66
1249  881D 6F 2E 2E 2E
1249  8821 0D 00
1250  8823 52 65 71 75  msg_request_info db "Request info...",13,0
1250  8827 65 73 74 20
1250  882B 69 6E 66 6F
1250  882F 2E 2E 2E 0D
1250  8833 00
1251  8834 52 65 71 75  msg_request_track db "Request track...",13,0
1251  8838 65 73 74 20
1251  883C 74 72 61 63
1251  8840 6B 2E 2E 2E
1251  8844 0D 00
1252  8846 44 6F 77 6E  msg_download_track db "Download track...",13,0
1252  884A 6C 6F 61 64
1252  884E 20 74 72 61
1252  8852 63 6B 2E 2E
1252  8856 2E 0D 00
1253  8859 50 6C 61 79  msg_play_track db "Play track...",13,0
1253  885D 20 74 72 61
1253  8861 63 6B 2E 2E
1253  8865 2E 0D 00
1254  8868 53 74 6F 70  msg_stop db "Stop",13,0
1254  886C 0D 00
1255  886E 52 65 73 74  msg_restart db "Restart...",13,0
1255  8872 61 72 74 2E
1255  8876 2E 2E 0D 00
1256  887A              ;msg_get_link_id db "Get link ID...",13,0
1257  887A 53 20 2D 20  msg_sys_info db "S - Stop, R - Restart, 1-2 - Format (pt2, pt3)",13
1257  887E 53 74 6F 70
1257  8882 2C 20 52 20
1257  8886 2D 20 52 65
1257  888A 73 74 61 72
1257  888E 74 2C 20 31
1257  8892 2D 32 20 2D
1257  8896 20 46 6F 72
1257  889A 6D 61 74 20
1257  889E 28 70 74 32
1257  88A2 2C 20 70 74
1257  88A6 33 29 0D
1258  88A9 53 70 20 2D  	db "Sp - Next, Break - Exit, "
1258  88AD 20 4E 65 78
1258  88B1 74 2C 20 42
1258  88B5 72 65 61 6B
1258  88B9 20 2D 20 45
1258  88BD 78 69 74 2C
1258  88C1 20
1259  88C2 44 20 2D 20  	db "D - Save file",13,0
1259  88C6 53 61 76 65
1259  88CA 20 66 69 6C
1259  88CE 65 0D 00
1260  88D1 51 20 2D 20  msg_order 	db "Q - Order: ",0
1260  88D5 4F 72 64 65
1260  88D9 72 3A 20 00
1261  88DD 0D 43 75 72  msg_cur_number	db 13,"Current number: ",0
1261  88E1 72 65 6E 74
1261  88E5 20 6E 75 6D
1261  88E9 62 65 72 3A
1261  88ED 20 00
1262  88EF
1263  88EF 72 61 6E 64  msg_order_random db "random",13,0
1263  88F3 6F 6D 0D 00
1264  88F7 66 72 6F 6D  msg_order_from_new db "from new to old",13,0
1264  88FB 20 6E 65 77
1264  88FF 20 74 6F 20
1264  8903 6F 6C 64 0D
1264  8907 00
1265  8908 66 72 6F 6D  msg_order_from_old db "from old to new",13,0
1265  890C 20 6F 6C 64
1265  8910 20 74 6F 20
1265  8914 6E 65 77 0D
1265  8918 00
1266  8919 53 69 7A 65  msg_download_size db "Size: ",0
1266  891D 3A 20 00
1267  8920 42 0D 00     msg_B db "B",13,0
1268  8923 00 00        total_track dw 0;
1269  8925 00 00        start_track dw 0;
1270  8927 00 00        cur_track dw 0;
1271  8929 70 74 32 00  format_pt2 db "pt2",0
1272  892D 70 74 33 00  format_pt3 db "pt3",0
1273  8931 20 74 73 00  format_ts db " ts",0
1274  8935 74 66 63 00  format_tfc db "tfc",0
1275  8939 01           order_val db 1 ;тип сортировки
1276  893A
1277  893A 00           file_id_cur db 0 ;временно
1278  893B
1279  893B 00           player_setup db 0;настройки плеера
1280  893C
1281  893C              ;запрос списка
1282  893C 52 65 71 75  requestbuffer_title db "Request:",13
1282  8940 65 73 74 3A
1282  8944 0D
1283  8945              requestbuffer ;
1284  8945 47 45 54 20  	db "GET /api/export:zxMusic/limit:1/start:"
1284  8949 2F 61 70 69
1284  894D 2F 65 78 70
1284  8951 6F 72 74 3A
1284  8955 7A 78 4D 75
1284  8959 73 69 63 2F
1284  895D 6C 69 6D 69
1284  8961 74 3A 31 2F
1284  8965 73 74 61 72
1284  8969 74 3A
1285  896B              start_request ;тут подстановка порядкового номера трека
1286  896B 30 30 30 30  	db "00000/filter:zxMusicFormat="
1286  896F 30 2F 66 69
1286  8973 6C 74 65 72
1286  8977 3A 7A 78 4D
1286  897B 75 73 69 63
1286  897F 46 6F 72 6D
1286  8983 61 74 3D
1287  8986              request_format
1288  8986 70 74 33 2F  	db "pt3/order:date,desc HTTP/1.1\r\n"
1288  898A 6F 72 64 65
1288  898E 72 3A 64 61
1288  8992 74 65 2C 64
1288  8996 65 73 63 20
1288  899A 48 54 54 50
1288  899E 2F 31 2E 31
1288  89A2 0D 0A
1289  89A4              ;request_agent
1290  89A4 48 6F 73 74  	db "Host: zxart.ee\r\n"
1290  89A8 3A 20 7A 78
1290  89AC 61 72 74 2E
1290  89B0 65 65 0D 0A
1291  89B4 55 73 65 72  	db "User-Agent: User-Agent: Mozilla/4.0 (compatible; MSIE5.01; GMX OS)\r\n\r\n",0
1291  89B8 2D 41 67 65
1291  89BC 6E 74 3A 20
1291  89C0 55 73 65 72
1291  89C4 2D 41 67 65
1291  89C8 6E 74 3A 20
1291  89CC 4D 6F 7A 69
1291  89D0 6C 6C 61 2F
1291  89D4 34 2E 30 20
1291  89D8 28 63 6F 6D
1291  89DC 70 61 74 69
1291  89E0 62 6C 65 3B
1291  89E4 20 4D 53 49
1291  89E8 45 35 2E 30
1291  89EC 31 3B 20 47
1291  89F0 4D 58 20 4F
1291  89F4 53 29 0D 0A
1291  89F8 0D 0A 00
1292  89FB
1293  89FB              ;запрос закачки
1294  89FB 52 65 71 75  requestbuffer2_title db "Request:",13
1294  89FF 65 73 74 3A
1294  8A03 0D
1295  8A04              requestbuffer2 ;
1296  8A04 47 45 54 20  	db "GET /file/id:"
1296  8A08 2F 66 69 6C
1296  8A0C 65 2F 69 64
1296  8A10 3A
1297  8A11              requestbuffer2_file_id ;тут подстановка id трека
1298  8A11              	;db "539319"
1299  8A11 00 00 00...  	ds #100 ;буфер для отправки
1300  8B11              requestbuffer2_end ;окончание строки запроса
1301  8B11 20 48 54 54  	db " HTTP/1.1\r\n"
1301  8B15 50 2F 31 2E
1301  8B19 31 0D 0A
1302  8B1C              ;request_agent
1303  8B1C 48 6F 73 74  	db "Host: zxart.ee\r\n"
1303  8B20 3A 20 7A 78
1303  8B24 61 72 74 2E
1303  8B28 65 65 0D 0A
1304  8B2C 55 73 65 72  	db "User-Agent: User-Agent: Mozilla/4.0 (compatible; MSIE5.01; GMX OS)\r\n\r\n",0
1304  8B30 2D 41 67 65
1304  8B34 6E 74 3A 20
1304  8B38 55 73 65 72
1304  8B3C 2D 41 67 65
1304  8B40 6E 74 3A 20
1304  8B44 4D 6F 7A 69
1304  8B48 6C 6C 61 2F
1304  8B4C 34 2E 30 20
1304  8B50 28 63 6F 6D
1304  8B54 70 61 74 69
1304  8B58 62 6C 65 3B
1304  8B5C 20 4D 53 49
1304  8B60 45 35 2E 30
1304  8B64 31 3B 20 47
1304  8B68 4D 58 20 4F
1304  8B6C 53 29 0D 0A
1304  8B70 0D 0A 00
1305  8B73
1306  8B73
1307  8B73              ;примеры (может не правильные)
1308  8B73              	;db "http://zxart.ee/api/types:zxMusic/export:zxMusic/language:eng/start:0/limit:2/order:date,desc/filter:zxMusicAll=1;"
1309  8B73              	;https://zxart.ee/api/types:zxMusic/export:zxMusic/language:eng/start:0/limit:2/order:date,desc/filter:zxMusicAll=1;
1310  8B73
1311  8B73              	;db "GET /file/id:44816",0
1312  8B73              	;db "GET /api/export:zxMusic/limit:2/start:0/filter:zxMusicFormat=pt3/order:date,desc",0
1313  8B73
1314  8B73
1315  8B73              ;requestbuffer_end
1316  8B73
1317  8B73              msg_title_radio
1318  8B73 52 61 64 69  	db "Radio ver 2025.10.08",10,13,0
1318  8B77 6F 20 76 65
1318  8B7B 72 20 32 30
1318  8B7F 32 35 2E 31
1318  8B83 30 2E 30 38
1318  8B87 0A 0D 00
1319  8B8A
1320  8B8A 52 65 73 70  outputBuffer_title db "Response:",13
1320  8B8E 6F 6E 73 65
1320  8B92 3A 0D
1321  8B94              outputBuffer equ $  ;буфер для загрузки
1322  8B94
1323  8B94              end_radio
1324  8B94              	;SAVETRD "OS.TRD",|"radio.C",start_radio,$-start_radio
1325  8B94              	savebin "radio.apg",start_radio,$-start_radio
# file closed: radio.asm
